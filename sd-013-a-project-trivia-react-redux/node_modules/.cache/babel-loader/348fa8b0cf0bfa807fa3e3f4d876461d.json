{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Gamepage.jsx\";\n// React\nimport React from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux'; // Children\n\nimport HeaderGame from '../components/HeaderGame';\nimport NextBtn from '../components/NextBtn';\n\nclass Gamepage extends React.Component {\n  constructor() {\n    super();\n    this.answerRandom = this.answerRandom.bind(this);\n  }\n\n  answerRandom() {\n    const answers = [];\n    const _this$props = this.props,\n          games = _this$props.games,\n          question = _this$props.question;\n    log;\n    const incorretas = games[question].incorrect_answers;\n    const correta = [games[question].correct_answer];\n    answers.push(...incorretas.map((answer, index) => React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": `wrong-answer-${index}`,\n      key: `wrong-answer-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, answer)));\n    answers.push(...correta.map(answer => React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"correct-answer\",\n      key: \"correct-answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, answer)));\n    return answers.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(({\n      value\n    }) => value);\n  }\n\n  render() {\n    const games = this.props.games;\n    const _games$ = games[0],\n          category = _games$.category,\n          question = _games$.question;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(HeaderGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"Sou uma P\\xE1gina de game\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, question), this.answerRandom()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(NextBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nGamepage.propTypes = {\n  games: PropTypes.arrayOf(PropTypes.object).isRequired,\n  question: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  games: state.game.games,\n  question: state.game.question\n});\n\nexport default connect(mapStateToProps, null)(Gamepage);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Gamepage.jsx"],"names":["React","PropTypes","connect","HeaderGame","NextBtn","Gamepage","Component","constructor","answerRandom","bind","answers","props","games","question","log","incorretas","incorrect_answers","correta","correct_answer","push","map","answer","index","value","sort","Math","random","a","b","render","category","propTypes","arrayOf","object","isRequired","number","mapStateToProps","state","game"],"mappings":"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","sourcesContent":["// React\nimport React from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// Children\nimport HeaderGame from '../components/HeaderGame';\n\nimport NextBtn from '../components/NextBtn';\n\nclass Gamepage extends React.Component {\n  constructor() {\n    super();\n\n    this.answerRandom = this.answerRandom.bind(this);\n  }\n\n  answerRandom() {\n    const answers = [];\n    const { games, question } = this.props;\n    log\n    const incorretas = games[question].incorrect_answers;\n    const correta = [games[question].correct_answer];\n\n    answers.push(...incorretas\n      .map((answer, index) => (\n        <button\n          type=\"button\"\n          data-testid={ `wrong-answer-${index}` }\n          key={ `wrong-answer-${index}` }\n        >\n          {answer}\n\n        </button>)));\n    answers.push(...correta\n      .map((answer) => (\n        <button\n          type=\"button\"\n          data-testid=\"correct-answer\"\n          key=\"correct-answer\"\n        >\n          {answer}\n\n        </button>)));\n    return answers\n      .map((value) => ({ value, sort: Math.random() }))\n      .sort((a, b) => a.sort - b.sort)\n      .map(({ value }) => value);\n  }\n\n  render() {\n    const { games } = this.props;\n    const { category, question } = games[0];\n\n    return (\n      <div>\n        <HeaderGame />\n        Sou uma PÃ¡gina de game\n        <div>\n          <h3 data-testid=\"question-category\">\n            { category }\n          </h3>\n          <p data-testid=\"question-text\">\n            { question }\n          </p>\n          {this.answerRandom()}\n        </div>\n        <div><NextBtn /></div>\n      </div>\n    );\n  }\n}\n\nGamepage.propTypes = {\n  games: PropTypes.arrayOf(PropTypes.object).isRequired,\n  question: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  games: state.game.games,\n  question: state.game.question,\n});\n\nexport default connect(mapStateToProps, null)(Gamepage);\n"]},"metadata":{},"sourceType":"module"}