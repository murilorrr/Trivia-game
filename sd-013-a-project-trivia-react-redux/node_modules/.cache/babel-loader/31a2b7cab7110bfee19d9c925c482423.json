{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/HeaderGame.jsx\";\n// React\nimport React, { Component } from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux'; // Helpers\n\nimport gravatar from '../helpers/gravatarAPI';\n\nclass HeaderGame extends Component {\n  constructor(props) {\n    // Super marked as \"deprecated\"\n    super(props);\n    this.playerLocalStorage = this.playerLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.playerLocalStorage();\n  }\n\n  playerLocalStorage() {\n    const _this$props = this.props,\n          playerEmail = _this$props.playerEmail,\n          playerName = _this$props.playerName;\n    /*\n      state: {\n          player: {\n          name,\n          assertions,\n          score,\n          gravatarEmail\n        },\n      }\n    */\n\n    const player = {\n      player: {\n        name: playerName,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: gravatar(playerEmail)\n      }\n    };\n    window.localStorage.setItem('state', JSON.stringify(player));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          score = _this$props2.score,\n          playerEmail = _this$props2.playerEmail,\n          playerName = _this$props2.playerName;\n    const gravatarSrc = gravatar(playerEmail);\n    return React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: gravatarSrc,\n      id: \"header-profile-picture\",\n      \"data-testid\": \"header-profile-picture\",\n      alt: \"gravatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"header-profile-picture\",\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, playerName), React.createElement(\"span\", {\n      id: \"header-score\",\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, score));\n  }\n\n}\n\nHeaderGame.propTypes = {\n  playerName: PropTypes.string.isRequired,\n  playerEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = store => ({\n  playerName: store.login.nome,\n  playerEmail: store.login.email,\n  assertions: store.game.assertions\n});\n\nexport default connect(mapStateToProps, null)(HeaderGame);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/HeaderGame.jsx"],"names":["React","Component","PropTypes","connect","gravatar","HeaderGame","constructor","props","playerLocalStorage","bind","componentDidMount","playerEmail","playerName","player","name","assertions","score","gravatarEmail","window","localStorage","setItem","JSON","stringify","render","gravatarSrc","propTypes","string","isRequired","number","mapStateToProps","store","login","nome","email","game"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,kBAAL;AACD;;AAEDA,EAAAA,kBAAkB,GAAG;AAAA,wBAC4B,IAD5B,CACXD,KADW;AAAA,UACFI,WADE,eACFA,WADE;AAAA,UACWC,UADX,eACWA,UADX;AAEnB;;;;;;;;;;;AAUA,UAAMC,MAAM,GAAG;AAAEA,MAAAA,MAAM,EAAE;AACvBC,QAAAA,IAAI,EAAEF,UADiB;AAEvBG,QAAAA,UAAU,EAAE,CAFW;AAGvBC,QAAAA,KAAK,EAAE,CAHgB;AAIvBC,QAAAA,aAAa,EAAEb,QAAQ,CAACO,WAAD;AAJA;AAAV,KAAf;AAOAO,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCC,IAAI,CAACC,SAAL,CAAeT,MAAf,CAArC;AACD;;AAEDU,EAAAA,MAAM,GAAG;AAAA,yBAC+C,IAD/C,CACChB,KADD;AAAA,UACUS,KADV,gBACUA,KADV;AAAA,UACiBL,WADjB,gBACiBA,WADjB;AAAA,UAC8BC,UAD9B,gBAC8BA,UAD9B;AAEP,UAAMY,WAAW,GAAGpB,QAAQ,CAACO,WAAD,CAA5B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,MAAA,GAAG,EAAGa,WADR;AAEE,MAAA,EAAE,EAAC,wBAFL;AAGE,qBAAY,wBAHd;AAIE,MAAA,GAAG,EAAC,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE;AACE,MAAA,EAAE,EAAC,wBADL;AAEE,qBAAY,oBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIIZ,UAJJ,CATF,EAgBE;AACE,MAAA,EAAE,EAAC,cADL;AAEE,qBAAY,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIII,KAJJ,CAhBF,CADF;AAyBD;;AA7DgC;;AAgEnCX,UAAU,CAACoB,SAAX,GAAuB;AACrBb,EAAAA,UAAU,EAAEV,SAAS,CAACwB,MAAV,CAAiBC,UADR;AAErBhB,EAAAA,WAAW,EAAET,SAAS,CAACwB,MAAV,CAAiBC,UAFT;AAGrBZ,EAAAA,UAAU,EAAEb,SAAS,CAAC0B,MAAV,CAAiBD;AAHR,CAAvB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,UAAU,EAAEkB,KAAK,CAACC,KAAN,CAAYC,IADU;AAElCrB,EAAAA,WAAW,EAAEmB,KAAK,CAACC,KAAN,CAAYE,KAFS;AAGlClB,EAAAA,UAAU,EAAEe,KAAK,CAACI,IAAN,CAAWnB;AAHW,CAAZ,CAAxB;;AAMA,eAAeZ,OAAO,CAAC0B,eAAD,EAAkB,IAAlB,CAAP,CAA+BxB,UAA/B,CAAf","sourcesContent":["// React\nimport React, { Component } from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// Helpers\nimport gravatar from '../helpers/gravatarAPI';\n\nclass HeaderGame extends Component {\n  constructor(props) {\n    // Super marked as \"deprecated\"\n    super(props);\n    this.playerLocalStorage = this.playerLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.playerLocalStorage();\n  }\n\n  playerLocalStorage() {\n    const { props: { playerEmail, playerName } } = this;\n    /*\n      state: {\n          player: {\n          name,\n          assertions,\n          score,\n          gravatarEmail\n        },\n      }\n    */\n    const player = { player: {\n      name: playerName,\n      assertions: 0,\n      score: 0,\n      gravatarEmail: gravatar(playerEmail),\n    } };\n\n    window.localStorage.setItem('state', JSON.stringify(player));\n  }\n\n  render() {\n    const { props: { score, playerEmail, playerName } } = this;\n    const gravatarSrc = gravatar(playerEmail);\n    return (\n      <header>\n        {/* Gravatar */}\n        <img\n          src={ gravatarSrc }\n          id=\"header-profile-picture\"\n          data-testid=\"header-profile-picture\"\n          alt=\"gravatar\"\n        />\n        {/* Nome do jogador */}\n        <span\n          id=\"header-profile-picture\"\n          data-testid=\"header-player-name\"\n        >\n          { playerName }\n        </span>\n        {/* Pontuação */}\n        <span\n          id=\"header-score\"\n          data-testid=\"header-score\"\n        >\n          { score }\n        </span>\n      </header>\n    );\n  }\n}\n\nHeaderGame.propTypes = {\n  playerName: PropTypes.string.isRequired,\n  playerEmail: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  playerName: store.login.nome,\n  playerEmail: store.login.email,\n  assertions: store.game.assertions,\n});\n\nexport default connect(mapStateToProps, null)(HeaderGame);\n"]},"metadata":{},"sourceType":"module"}