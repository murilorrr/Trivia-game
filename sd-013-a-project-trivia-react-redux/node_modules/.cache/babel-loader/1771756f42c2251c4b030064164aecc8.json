{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Feedback.jsx\";\n// React\nimport React, { Component } from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux'; // Children\n\nimport HeaderGame from '../components/HeaderGame';\nimport PlayAgain from '../components/PlayAgain';\nimport ViewRanking from '../components/ViewRanking';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.renderMessage = this.renderMessage.bind(this);\n    this.renderFeedbackQuestion = this.renderFeedbackQuestion.bind(this);\n  }\n\n  renderMessage() {\n    const assertions = this.props.assertions;\n    const three = 3;\n\n    if (assertions < three) {\n      return 'Podia ser melhor...';\n    }\n\n    return 'Mandou bem!';\n  }\n\n  renderFeedbackQuestion() {\n    const assertions = this.props.assertions;\n\n    if (assertions === 0) {\n      return 'Não acertou nenhuma pergunta';\n    }\n\n    return React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Acertou\", assertions, \"perguntas\");\n  }\n\n  render() {\n    const score = this.props.score;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(HeaderGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.renderMessage()), React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, score), React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), this.renderFeedbackQuestion(), React.createElement(PlayAgain, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ViewRanking, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = store => ({\n  assertions: store.game.assertions,\n  // Número de acertos\n  score: store.header.score\n});\n\nexport default connect(mapStateToProps, null)(Feedback);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Feedback.jsx"],"names":["React","Component","PropTypes","connect","HeaderGame","PlayAgain","ViewRanking","Feedback","constructor","props","renderMessage","bind","renderFeedbackQuestion","assertions","three","render","score","propTypes","number","isRequired","mapStateToProps","store","game","header"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AAEDD,EAAAA,aAAa,GAAG;AAAA,UACNG,UADM,GACS,KAAKJ,KADd,CACNI,UADM;AAEd,UAAMC,KAAK,GAAG,CAAd;;AACA,QAAID,UAAU,GAAGC,KAAjB,EAAwB;AACtB,aAAO,qBAAP;AACD;;AACD,WAAO,aAAP;AACD;;AAEDF,EAAAA,sBAAsB,GAAG;AAAA,UACfC,UADe,GACA,KAAKJ,KADL,CACfI,UADe;;AAEvB,QAAIA,UAAU,KAAK,CAAnB,EAAsB;AACpB,aACE,8BADF;AAED;;AACD,WACE;AAAM,qBAAY,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGA,UAFH,cADF;AAMD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKP,KADhB,CACCO,KADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAM,qBAAY,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKN,aAAL,EADJ,CAFF,EAKE;AAAM,qBAAY,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIM,KADJ,CALF,EAQE;AAAM,qBAAY,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAUI,KAAKJ,sBAAL,EAVJ,EAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAgBD;;AAjD8B;;AAoDjCL,QAAQ,CAACU,SAAT,GAAqB;AACnBJ,EAAAA,UAAU,EAAEX,SAAS,CAACgB,MAAV,CAAiBC,UADV;AAEnBH,EAAAA,KAAK,EAAEd,SAAS,CAACgB,MAAV,CAAiBC;AAFL,CAArB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,UAAU,EAAEQ,KAAK,CAACC,IAAN,CAAWT,UADW;AACC;AACnCG,EAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaP;AAFc,CAAZ,CAAxB;;AAKA,eAAeb,OAAO,CAACiB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bb,QAA/B,CAAf","sourcesContent":["// React\nimport React, { Component } from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// Children\nimport HeaderGame from '../components/HeaderGame';\nimport PlayAgain from '../components/PlayAgain';\nimport ViewRanking from '../components/ViewRanking';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMessage = this.renderMessage.bind(this);\n    this.renderFeedbackQuestion = this.renderFeedbackQuestion.bind(this);\n  }\n\n  renderMessage() {\n    const { assertions } = this.props;\n    const three = 3;\n    if (assertions < three) {\n      return 'Podia ser melhor...';\n    }\n    return 'Mandou bem!';\n  }\n\n  renderFeedbackQuestion() {\n    const { assertions } = this.props;\n    if (assertions === 0) {\n      return (\n        'Não acertou nenhuma pergunta');\n    }\n    return (\n      <span data-testid=\"feedback-total-question\">\n        Acertou\n        {assertions}\n        perguntas\n      </span>);\n  }\n\n  render() {\n    const { score } = this.props;\n    return (\n      <section>\n        <HeaderGame />\n        <span data-testid=\"feedback-text\">\n          { this.renderMessage() }\n        </span>\n        <span data-testid=\"feedback-total-score\">\n          { score }\n        </span>\n        <span data-testid=\"feedback-total-question\">\n        </span>\n        { this.renderFeedbackQuestion() }\n        <PlayAgain />\n        <ViewRanking />\n      </section>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  assertions: store.game.assertions, // Número de acertos\n  score: store.header.score,\n});\n\nexport default connect(mapStateToProps, null)(Feedback);\n"]},"metadata":{},"sourceType":"module"}