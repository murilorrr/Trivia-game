{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { fetchCategories } from '../helpers/apiTrivia';\nimport { setCategory, setDifficult, setAllCategory, setNumberOfQuestions } from '../redux/actions/settings';\n\nclass Settings extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allcategories: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const _this$props = this.props,\n          allcategories = _this$props.allcategories,\n          configGameAllCategoriesDispatch = _this$props.configGameAllCategoriesDispatch;\n\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      configGameAllCategoriesDispatch(response);\n      this.setState({\n        allcategories: response\n      });\n    } else {\n      const _this$props2 = this.props,\n            value = _this$props2.value,\n            category = _this$props2.category,\n            difficult = _this$props2.difficult;\n      this.setState({\n        allcategories,\n        value,\n        category,\n        difficult\n      });\n    }\n  }\n\n  mapAllCategories(param) {\n    const category = this.state.category;\n    return param.map(el => React.createElement(\"option\", {\n      selected: el.id === category,\n      key: el.id,\n      value: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, el.name));\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          allcategories = _this$state.allcategories,\n          value = _this$state.value,\n          difficult = _this$state.difficult;\n    const _this$props3 = this.props,\n          configGameCategoryDispatch = _this$props3.configGameCategoryDispatch,\n          configGameNumberDispatch = _this$props3.configGameNumberDispatch,\n          configGameDifficultDispatch = _this$props3.configGameDifficultDispatch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"settings-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), this.renderValues, React.createElement(\"label\", {\n      htmlFor: \"categorias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Categoria:\", React.createElement(\"select\", {\n      id: \"categorias\",\n      name: \"categorias\",\n      onChange: () => {\n        this.handleChange;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.mapAllCategories(allcategories))), React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Dificuldade:\", React.createElement(\"select\", {\n      select: difficult,\n      id: \"value\",\n      name: \"dificuldade\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Any Difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Any Difficult\"), React.createElement(\"option\", {\n      value: \"easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(\"option\", {\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Hard\"))), React.createElement(\"div\", {\n      className: \"btn-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Go back\"), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Save Config\")));\n  }\n\n}\n\nSettings.propTypes = {\n  allcategories: propTypes.arrayOf(propTypes.object).isRequired,\n  category: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n  difficult: propTypes.number.isRequired,\n  configGameAllCategoriesDispatch: propTypes.func.isRequired,\n  configGameCategoryDispatch: propTypes.func.isRequired,\n  configGameNumberDispatch: propTypes.func.isRequired,\n  configGameDifficultDispatch: propTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  numberOfQuestions: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allCategories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  configGameCategoryDispatch: payload => dispatch(setCategory(payload)),\n  configGameNumberDispatch: payload => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: payload => dispatch(setDifficult(payload)),\n  configGameAllCategoriesDispatch: payload => dispatch(setAllCategory(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.js"],"names":["React","connect","propTypes","fetchCategories","setCategory","setDifficult","setAllCategory","setNumberOfQuestions","Settings","Component","constructor","state","allcategories","handleChange","bind","mapAllCategories","setAllcategories","componentDidMount","props","configGameAllCategoriesDispatch","length","response","setState","value","category","difficult","param","map","el","id","name","target","render","configGameCategoryDispatch","configGameNumberDispatch","configGameDifficultDispatch","renderValues","arrayOf","object","isRequired","string","number","func","mapStateToProps","numberOfQuestions","settings","allCategories","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { fetchCategories } from '../helpers/apiTrivia';\nimport { setCategory,\n  setDifficult,\n  setAllCategory,\n  setNumberOfQuestions } from '../redux/actions/settings';\n\nclass Settings extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allcategories: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const { allcategories, configGameAllCategoriesDispatch } = this.props;\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      configGameAllCategoriesDispatch(response);\n      this.setState({ allcategories: response });\n    } else {\n      const { value, category, difficult } = this.props;\n      this.setState({ allcategories, value, category, difficult });\n    }\n  }\n\n  mapAllCategories(param) {\n    const { category } = this.state;\n    return param.map((el) => (\n      <option\n        selected={ el.id === category }\n        key={ el.id }\n        value={ el.id }\n      >\n        {el.name}\n      </option>));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { allcategories, value, difficult } = this.state;\n    const { configGameCategoryDispatch,\n      configGameNumberDispatch,\n      configGameDifficultDispatch \n    } = this.props;\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Configurações</h1>\n        {this.renderValues}\n        <label htmlFor=\"categorias\">\n          Categoria:\n          <select\n            id=\"categorias\"\n            name=\"categorias\"\n            onChange={ () => {\n              this.handleChange;\n            } }\n          >\n            {this.mapAllCategories(allcategories)}\n          </select>\n        </label>\n        <label htmlFor=\"value\">\n          Dificuldade:\n          <select\n            select={ difficult }\n            id=\"value\"\n            name=\"dificuldade\"\n            onChange={ this.handleChange }\n          >\n            <option value=\"Any Difficulty\">Any Difficult</option>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </label>\n        <div className=\"btn-div\">\n          <button type=\"button\">Go back</button>\n          <button type=\"button\">Save Config</button>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nSettings.propTypes = {\n  allcategories: propTypes.arrayOf(propTypes.object).isRequired,\n  category: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n  difficult: propTypes.number.isRequired,\n  configGameAllCategoriesDispatch: propTypes.func.isRequired,\n  configGameCategoryDispatch: propTypes.func.isRequired,\n  configGameNumberDispatch: propTypes.func.isRequired,\n  configGameDifficultDispatch: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  numberOfQuestions: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allCategories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  configGameCategoryDispatch: (payload) => dispatch(setCategory(payload)),\n  configGameNumberDispatch: (payload) => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: (payload) => dispatch(setDifficult(payload)),\n  configGameAllCategoriesDispatch: (payload) => dispatch(setAllCategory(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n"]},"metadata":{},"sourceType":"module"}