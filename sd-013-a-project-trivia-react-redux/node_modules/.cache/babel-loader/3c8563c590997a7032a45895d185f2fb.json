{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/PlayAgain.jsx\";\n// React\nimport React, { Component } from 'react'; // Router\n\nimport { withRouter } from 'react-router'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux';\nimport { resetAll, resetScore } from '../redux/actions/game';\nimport { resetTimer } from '../redux/actions/timer';\n\nclass PlayAgain extends Component {\n  constructor(props) {\n    super(props);\n    this.redirectToHome = this.redirectToHome.bind(this);\n  }\n\n  redirectToHome() {\n    const _this$props = this.props,\n          history = _this$props.history,\n          resetAllDispatch = _this$props.resetAllDispatch,\n          resetScoreDispatch = _this$props.resetScoreDispatch,\n          resetTimerDispatch = _this$props.resetTimerDispatch;\n    resetTimerDispatch();\n    resetScoreDispatch();\n    resetAllDispatch();\n    history.push('/');\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: () => this.redirectToHome(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Jogar novamente\");\n  }\n\n}\n\nPlayAgain.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  resetAllDispatch: PropTypes.func.isRequired,\n  resetScoreDispatch: PropTypes.func.isRequired,\n  resetTimerDispatch: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  resetAllDispatch: () => dispatch(resetAll()),\n  resetScoreDispatch: () => dispatch(resetScore()),\n  resetTimerDispatch: () => dispatch(resetTimer())\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(PlayAgain));","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/PlayAgain.jsx"],"names":["React","Component","withRouter","PropTypes","connect","resetAll","resetScore","resetTimer","PlayAgain","constructor","props","redirectToHome","bind","history","resetAllDispatch","resetScoreDispatch","resetTimerDispatch","push","render","propTypes","shape","func","isRequired","mapDispatchToProps","dispatch"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,uBAArC;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AAAA,wBAMX,KAAKD,KANM;AAAA,UAEbG,OAFa,eAEbA,OAFa;AAAA,UAGbC,gBAHa,eAGbA,gBAHa;AAAA,UAIbC,kBAJa,eAIbA,kBAJa;AAAA,UAKbC,kBALa,eAKbA,kBALa;AAOfA,IAAAA,kBAAkB;AAClBD,IAAAA,kBAAkB;AAClBD,IAAAA,gBAAgB;AAChBD,IAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,qBAAY,gBAHd;AAIE,MAAA,OAAO,EAAG,MAAM,KAAKP,cAAL,EAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF;AAUD;;AA/B+B;;AAkClCH,SAAS,CAACW,SAAV,GAAsB;AACpBN,EAAAA,OAAO,EAAEV,SAAS,CAACiB,KAAV,CAAgB;AACvBH,IAAAA,IAAI,EAAEd,SAAS,CAACkB,IAAV,CAAeC;AADE,GAAhB,EAENA,UAHiB;AAIpBR,EAAAA,gBAAgB,EAAEX,SAAS,CAACkB,IAAV,CAAeC,UAJb;AAKpBP,EAAAA,kBAAkB,EAAEZ,SAAS,CAACkB,IAAV,CAAeC,UALf;AAMpBN,EAAAA,kBAAkB,EAAEb,SAAS,CAACkB,IAAV,CAAeC;AANf,CAAtB;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,gBAAgB,EAAE,MAAMU,QAAQ,CAACnB,QAAQ,EAAT,CADQ;AAExCU,EAAAA,kBAAkB,EAAE,MAAMS,QAAQ,CAAClB,UAAU,EAAX,CAFM;AAGxCU,EAAAA,kBAAkB,EAAE,MAAMQ,QAAQ,CAACjB,UAAU,EAAX;AAHM,CAAf,CAA3B;;AAMA,eAAeL,UAAU,CAACE,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCf,SAAlC,CAAD,CAAzB","sourcesContent":["// React\nimport React, { Component } from 'react';\n\n// Router\nimport { withRouter } from 'react-router';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { resetAll, resetScore } from '../redux/actions/game';\nimport { resetTimer } from '../redux/actions/timer';\n\nclass PlayAgain extends Component {\n  constructor(props) {\n    super(props);\n\n    this.redirectToHome = this.redirectToHome.bind(this);\n  }\n\n  redirectToHome() {\n    const {\n      history,\n      resetAllDispatch,\n      resetScoreDispatch,\n      resetTimerDispatch,\n    } = this.props;\n    resetTimerDispatch();\n    resetScoreDispatch();\n    resetAllDispatch();\n    history.push('/');\n  }\n\n  render() {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        data-testid=\"btn-play-again\"\n        onClick={ () => this.redirectToHome() }\n      >\n        Jogar novamente\n      </button>\n    );\n  }\n}\n\nPlayAgain.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  resetAllDispatch: PropTypes.func.isRequired,\n  resetScoreDispatch: PropTypes.func.isRequired,\n  resetTimerDispatch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetAllDispatch: () => dispatch(resetAll()),\n  resetScoreDispatch: () => dispatch(resetScore()),\n  resetTimerDispatch: () => dispatch(resetTimer()),\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(PlayAgain));\n"]},"metadata":{},"sourceType":"module"}