{"ast":null,"code":"import { connect } from 'react-redux';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nclass apiTrivia extends React.Component {\n  constructor() {\n    super();\n    this.apiTrivia = this.apiTrivia.bind();\n  }\n\n  async apiTrivia(token) {\n    const _this$props = this.props,\n          numberOfQuestions = _this$props.numberOfQuestions,\n          category = _this$props.category,\n          difficult = _this$props.difficult;\n    let endpoint = `https://opentdb.com/api.php?amount=${numberOfQuestions}}&token=${token}`;\n    if (category !== 'Any Category') endpoint += `&category=${category}`;\n    if (difficult !== 'Any Difficult') endpoint += `&difficulty=${difficult}`;\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data.results;\n  }\n\n}\n\napiTrivia.propTypes = {\n  numberOfQuestions: propTypes.number.isRequired,\n  category: propTypes.string.isRequired,\n  difficult: propTypes.string.isRequired\n};\nexport async function fetchCategories() {\n  try {\n    const response = await fetch('https://opentdb.com/api_category.php');\n    const data = await response.json();\n    return data.trivia_categories;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst mapStateToProps = state => ({\n  numberOfQuestions: state.numberOfQuestions,\n  category: state.category,\n  difficult: state.difficult\n});\n\nexport default connect(mapStateToProps, null)(apiTrivia);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/helpers/apiTrivia.js"],"names":["connect","React","propTypes","apiTrivia","Component","constructor","bind","token","props","numberOfQuestions","category","difficult","endpoint","response","fetch","data","json","results","number","isRequired","string","fetchCategories","trivia_categories","error","console","log","mapStateToProps","state"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKF,SAAL,GAAiB,KAAKA,SAAL,CAAeG,IAAf,EAAjB;AACD;;AAED,QAAMH,SAAN,CAAgBI,KAAhB,EAAuB;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACbC,iBADa,eACbA,iBADa;AAAA,UACMC,QADN,eACMA,QADN;AAAA,UACgBC,SADhB,eACgBA,SADhB;AAErB,QAAIC,QAAQ,GAAI,sCAAqCH,iBAAkB,WAAUF,KAAM,EAAvF;AACA,QAAIG,QAAQ,KAAK,cAAjB,EAAiCE,QAAQ,IAAK,aAAYF,QAAS,EAAlC;AACjC,QAAIC,SAAS,KAAK,eAAlB,EAAmCC,QAAQ,IAAK,eAAcD,SAAU,EAArC;AACnC,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAI,CAACE,OAAZ;AACD;;AAfqC;;AAkBxCd,SAAS,CAACD,SAAV,GAAsB;AACpBO,EAAAA,iBAAiB,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UADhB;AAEpBT,EAAAA,QAAQ,EAAER,SAAS,CAACkB,MAAV,CAAiBD,UAFP;AAGpBR,EAAAA,SAAS,EAAET,SAAS,CAACkB,MAAV,CAAiBD;AAHR,CAAtB;AAMA,OAAO,eAAeE,eAAf,GAAiC;AACtC,MAAI;AACF,UAAMR,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sCAD0B,CAA5B;AAGA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAI,CAACO,iBAAZ;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,iBAAiB,EAAEkB,KAAK,CAAClB,iBADS;AAElCC,EAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QAFkB;AAGlCC,EAAAA,SAAS,EAAEgB,KAAK,CAAChB;AAHiB,CAAZ,CAAxB;;AAMA,eAAeX,OAAO,CAAC0B,eAAD,EAAkB,IAAlB,CAAP,CAA+BvB,SAA/B,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nclass apiTrivia extends React.Component {\n  constructor() {\n    super();\n\n    this.apiTrivia = this.apiTrivia.bind();\n  }\n\n  async apiTrivia(token) {\n    const { numberOfQuestions, category, difficult } = this.props;\n    let endpoint = `https://opentdb.com/api.php?amount=${numberOfQuestions}}&token=${token}`;\n    if (category !== 'Any Category') endpoint += `&category=${category}`;\n    if (difficult !== 'Any Difficult') endpoint += `&difficulty=${difficult}`;\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data.results;\n  }\n}\n\napiTrivia.propTypes = {\n  numberOfQuestions: propTypes.number.isRequired,\n  category: propTypes.string.isRequired,\n  difficult: propTypes.string.isRequired,\n};\n\nexport async function fetchCategories() {\n  try {\n    const response = await fetch(\n      'https://opentdb.com/api_category.php',\n    );\n    const data = await response.json();\n    return data.trivia_categories;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  numberOfQuestions: state.numberOfQuestions,\n  category: state.category,\n  difficult: state.difficult,\n});\n\nexport default connect(mapStateToProps, null)(apiTrivia);\n"]},"metadata":{},"sourceType":"module"}