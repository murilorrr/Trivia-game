{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { fetchCategories } from '../helpers/apiTrivia';\nimport { setCategory, setDifficult, setNumberOfQuestions } from '../redux/actions/settings';\n\nclass Settings extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allcategories: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const allcategories = this.props.allcategories;\n\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      this.setState({\n        allcategories: response\n      });\n    } else {\n      const _this$props = this.props,\n            value = _this$props.value,\n            category = _this$props.category,\n            difficult = _this$props.difficult;\n      this.setState({\n        allcategories,\n        value,\n        category,\n        difficult\n      });\n    }\n  }\n\n  mapAllCategories(param) {\n    return param.map(el => React.createElement(\"option\", {\n      key: el.id,\n      value: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, el.name));\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const allcategories = this.state.allcategories;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"settings-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Quantidade:\", React.createElement(\"select\", {\n      id: \"value\",\n      name: \"quatidade\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"15\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"20\"))), React.createElement(\"label\", {\n      htmlFor: \"categorias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Categoria:\", React.createElement(\"select\", {\n      id: \"categorias\",\n      name: \"categorias\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.mapAllCategories(allcategories))), React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Dificuldade:\", React.createElement(\"select\", {\n      id: \"value\",\n      name: \"dificuldade\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Any Difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Qualquer\"), React.createElement(\"option\", {\n      value: \"easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"F\\xE1cil\"), React.createElement(\"option\", {\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Normal\"), React.createElement(\"option\", {\n      value: \"hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Dificil\"))), React.createElement(\"div\", {\n      className: \"btn-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Voltar\"), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Salvar Configura\\xE7\\xF5es\")));\n  }\n\n}\n\nSettings.propTypes = {\n  allcategories: propTypes.arrayOf(propTypes.object).isRequired,\n  category: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n  difficult: propTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  numberOfQuestions: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allcategories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  configGameCategoryDispatch: payload => dispatch(setCategory(payload)),\n  configGameNumberDispatch: payload => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: payload => dispatch(setDifficult(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.js"],"names":["React","connect","propTypes","fetchCategories","setCategory","setDifficult","setNumberOfQuestions","Settings","Component","constructor","state","allcategories","handleChange","bind","mapAllCategories","setAllcategories","componentDidMount","props","length","response","setState","value","category","difficult","param","map","el","id","name","target","render","arrayOf","object","isRequired","string","number","mapStateToProps","numberOfQuestions","settings","mapDispatchToProps","dispatch","configGameCategoryDispatch","payload","configGameNumberDispatch","configGameDifficultDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { fetchCategories } from '../helpers/apiTrivia';\nimport { setCategory,\n  setDifficult,\n  setNumberOfQuestions } from '../redux/actions/settings';\n\nclass Settings extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      allcategories: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const { allcategories } = this.props;\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      this.setState({ allcategories: response });\n    } else {\n      const { value, category, difficult } = this.props;\n      this.setState({ allcategories, value, category, difficult });\n    }\n  }\n\n  mapAllCategories(param) {\n    return param.map((el) => <option key={ el.id } value={ el.id }>{el.name}</option>);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { allcategories } = this.state;\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Configurações</h1>\n        <label htmlFor=\"value\">\n          Quantidade:\n          <select id=\"value\" name=\"quatidade\" onChange={ this.handleChange }>\n            <option>5</option>\n            <option>10</option>\n            <option>15</option>\n            <option>20</option>\n          </select>\n        </label>\n        <label htmlFor=\"categorias\">\n          Categoria:\n          <select id=\"categorias\" name=\"categorias\" onChange={ this.handleChange }>\n            {this.mapAllCategories(allcategories)}\n          </select>\n        </label>\n        <label htmlFor=\"value\">\n          Dificuldade:\n          <select id=\"value\" name=\"dificuldade\" onChange={ this.handleChange }>\n            <option value=\"Any Difficulty\">Qualquer</option>\n            <option value=\"easy\">Fácil</option>\n            <option value=\"medium\">Normal</option>\n            <option value=\"hard\">Dificil</option>\n          </select>\n        </label>\n        <div className=\"btn-div\">\n          <button type=\"button\">Voltar</button>\n          <button type=\"button\">Salvar Configurações</button>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nSettings.propTypes = {\n  allcategories: propTypes.arrayOf(propTypes.object).isRequired,\n  category: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n  difficult: propTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  numberOfQuestions: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allcategories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  configGameCategoryDispatch: (payload) => dispatch(setCategory(payload)),\n  configGameNumberDispatch: (payload) => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: (payload) => dispatch(setDifficult(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n"]},"metadata":{},"sourceType":"module"}