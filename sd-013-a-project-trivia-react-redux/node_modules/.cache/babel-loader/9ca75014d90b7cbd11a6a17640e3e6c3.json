{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { fetchCategories } from '../helpers/apiTrivia';\nimport { setCategory, setDifficult, setAllCategory, setNumberOfQuestions } from '../redux/actions/settings';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    const _this$props = this.props,\n          value = _this$props.value,\n          category = _this$props.category,\n          difficult = _this$props.difficult,\n          allcategories = _this$props.allcategories;\n    this.state = {\n      allcategories,\n      value,\n      category,\n      difficult\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n    this.renderValues = this.renderValues.bind(this);\n    this.renderDifficulty = this.renderDifficulty.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const _this$props2 = this.props,\n          allcategories = _this$props2.allcategories,\n          configGameAllCategoriesDispatch = _this$props2.configGameAllCategoriesDispatch;\n\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      configGameAllCategoriesDispatch(response);\n      this.setState({\n        allcategories: response\n      });\n    } else {\n      const _this$props3 = this.props,\n            value = _this$props3.value,\n            category = _this$props3.category,\n            difficult = _this$props3.difficult;\n      this.setState({\n        allcategories,\n        value,\n        category,\n        difficult\n      });\n    }\n  }\n\n  save() {\n    const _this$props4 = this.props,\n          configGameCategoryDispatch = _this$props4.configGameCategoryDispatch,\n          configGameNumberDispatch = _this$props4.configGameNumberDispatch,\n          configGameDifficultDispatch = _this$props4.configGameDifficultDispatch;\n    const _this$state = this.state,\n          category = _this$state.category,\n          value = _this$state.value,\n          difficult = _this$state.difficult;\n    configGameCategoryDispatch();\n  }\n\n  mapAllCategories(param) {\n    const category = this.state.category;\n    return param.map(el => React.createElement(\"option\", {\n      selected: el.id === category,\n      key: el.id,\n      value: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, el.name));\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  renderDifficulty() {\n    const difficult = this.state.difficult;\n    return React.createElement(\"label\", {\n      htmlFor: \"difficult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Select Difficulty:\", React.createElement(\"select\", {\n      select: difficult,\n      id: \"difficult\",\n      name: \"difficult\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: difficult === 'Any Difficulty',\n      value: \"Any Difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Any Difficulty\"), React.createElement(\"option\", {\n      selected: difficult === 'easy',\n      value: \"easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(\"option\", {\n      selected: difficult === 'medium',\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      selected: difficult === 'hard',\n      value: \"hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Hard\")));\n  }\n\n  renderValues() {\n    const value = this.state.value;\n    return React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Number of Questions:\", React.createElement(\"select\", {\n      id: \"value\",\n      name: \"value\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: value === '15',\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      selected: value === '10',\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      selected: value === '15',\n      value: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"15\"), React.createElement(\"option\", {\n      selected: value === '20',\n      value: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"20\")));\n  }\n\n  render() {\n    const allcategories = this.state.allcategories;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"settings-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), this.renderValues(), React.createElement(\"label\", {\n      htmlFor: \"categorias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Select Category:\", React.createElement(\"select\", {\n      id: \"categorias\",\n      name: \"categorias\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.mapAllCategories(allcategories))), this.renderDifficulty(), React.createElement(\"div\", {\n      className: \"btn-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Go back\"), React.createElement(\"button\", {\n      onClick: this.save,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Save Config\")));\n  }\n\n}\n\nSettings.propTypes = {\n  allcategories: propTypes.arrayOf(propTypes.object).isRequired,\n  category: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n  difficult: propTypes.number.isRequired,\n  configGameAllCategoriesDispatch: propTypes.func.isRequired,\n  configGameCategoryDispatch: propTypes.func.isRequired,\n  configGameNumberDispatch: propTypes.func.isRequired,\n  configGameDifficultDispatch: propTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  value: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allCategories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  configGameCategoryDispatch: payload => dispatch(setCategory(payload)),\n  configGameNumberDispatch: payload => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: payload => dispatch(setDifficult(payload)),\n  configGameAllCategoriesDispatch: payload => dispatch(setAllCategory(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.js"],"names":["React","connect","propTypes","fetchCategories","setCategory","setDifficult","setAllCategory","setNumberOfQuestions","Settings","Component","constructor","props","value","category","difficult","allcategories","state","handleChange","bind","mapAllCategories","setAllcategories","renderValues","renderDifficulty","save","componentDidMount","configGameAllCategoriesDispatch","length","response","setState","configGameCategoryDispatch","configGameNumberDispatch","configGameDifficultDispatch","param","map","el","id","name","target","render","arrayOf","object","isRequired","string","number","func","mapStateToProps","settings","numberOfQuestions","allCategories","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { fetchCategories } from '../helpers/apiTrivia';\nimport { setCategory,\n  setDifficult,\n  setAllCategory,\n  setNumberOfQuestions } from '../redux/actions/settings';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value, category, difficult, allcategories } = this.props;\n    this.state = {\n      allcategories,\n      value,\n      category,\n      difficult,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n    this.renderValues = this.renderValues.bind(this);\n    this.renderDifficulty = this.renderDifficulty.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const { allcategories, configGameAllCategoriesDispatch } = this.props;\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      configGameAllCategoriesDispatch(response);\n      this.setState({ allcategories: response });\n    } else {\n      const { value, category, difficult } = this.props;\n      this.setState({ allcategories, value, category, difficult });\n    }\n  }\n\n  save() {\n    const {\n      configGameCategoryDispatch,\n      configGameNumberDispatch,\n      configGameDifficultDispatch\n    } = this.props;\n    const { category, value, difficult } = this.state;\n    configGameCategoryDispatch();\n  }\n\n  mapAllCategories(param) {\n    const { category } = this.state;\n    return param.map((el) => (\n      <option\n        selected={ el.id === category }\n        key={ el.id }\n        value={ el.id }\n      >\n        {el.name}\n      </option>));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  renderDifficulty() {\n    const { difficult } = this.state;\n    return (\n      <label htmlFor=\"difficult\">\n        Select Difficulty:\n        <select\n          select={ difficult }\n          id=\"difficult\"\n          name=\"difficult\"\n          onChange={ this.handleChange }\n        >\n          <option\n            selected={ difficult === 'Any Difficulty' }\n            value=\"Any Difficulty\"\n          >\n            Any Difficulty\n          </option>\n          <option selected={ difficult === 'easy' } value=\"easy\">Easy</option>\n          <option selected={ difficult === 'medium' } value=\"medium\">Medium</option>\n          <option selected={ difficult === 'hard' } value=\"hard\">Hard</option>\n        </select>\n      </label>\n    );\n  }\n\n  renderValues() {\n    const { value } = this.state;\n    return (\n      <label htmlFor=\"value\">\n        Number of Questions:\n        <select\n          id=\"value\"\n          name=\"value\"\n          onChange={ this.handleChange }\n        >\n          <option selected={ value === '15' } value=\"5\">5</option>\n          <option selected={ value === '10' } value=\"10\">10</option>\n          <option selected={ value === '15' } value=\"15\">15</option>\n          <option selected={ value === '20' } value=\"20\">20</option>\n        </select>\n      </label>);\n  }\n\n  render() {\n    const { allcategories } = this.state;\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Configurações</h1>\n        {this.renderValues()}\n        <label htmlFor=\"categorias\">\n          Select Category:\n          <select\n            id=\"categorias\"\n            name=\"categorias\"\n            onChange={ this.handleChange }\n          >\n            {this.mapAllCategories(allcategories)}\n          </select>\n        </label>\n        {this.renderDifficulty()}\n\n        <div className=\"btn-div\">\n          <button type=\"button\">Go back</button>\n          <button onClick={ this.save } type=\"button\">Save Config</button>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nSettings.propTypes = {\n  allcategories: propTypes.arrayOf(propTypes.object).isRequired,\n  category: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n  difficult: propTypes.number.isRequired,\n  configGameAllCategoriesDispatch: propTypes.func.isRequired,\n  configGameCategoryDispatch: propTypes.func.isRequired,\n  configGameNumberDispatch: propTypes.func.isRequired,\n  configGameDifficultDispatch: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allCategories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  configGameCategoryDispatch: (payload) => dispatch(setCategory(payload)),\n  configGameNumberDispatch: (payload) => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: (payload) => dispatch(setDifficult(payload)),\n  configGameAllCategoriesDispatch: (payload) => dispatch(setAllCategory(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n"]},"metadata":{},"sourceType":"module"}