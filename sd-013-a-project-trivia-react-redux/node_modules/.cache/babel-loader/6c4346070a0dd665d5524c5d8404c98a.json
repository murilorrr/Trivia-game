{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Login/index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getToken } from '../../redux/actions';\nimport style from './Login.module.css';\nimport logo from '../../assets/Trivia.png';\nimport { generateGravatar, validateEmail } from './helpers';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      shouldRedirect: false,\n      invalidEmail: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(event) {\n    const dispatchLogin = this.props.dispatchLogin;\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n    const gravatar = generateGravatar(email);\n    event.preventDefault();\n    await dispatchLogin({\n      name,\n      email,\n      gravatar\n    });\n    this.setState({\n      shouldRedirect: true\n    });\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    }, () => name === 'email' && validateEmail(value) ? this.setState({\n      invalidEmail: false\n    }) : this.setState({\n      invalidEmail: true\n    }));\n  }\n\n  renderForm() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          invalidEmail = _this$state2.invalidEmail;\n    return React.createElement(\"form\", {\n      className: style.form,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      \"data-testid\": \"input-player-name\",\n      type: \"text\",\n      name: \"name\",\n      className: style.input,\n      placeholder: \"Digite seu nome\",\n      value: name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      \"data-testid\": \"input-gravatar-email\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Digite seu e-mail com gravatar\",\n      value: email,\n      className: style.input,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      title: \"Clique aqui para jogar\",\n      className: style.play,\n      \"data-testid\": \"btn-play\",\n      disabled: name.length < 1 || invalidEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Jogar\"), React.createElement(Link, {\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: style.settings,\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\")));\n  }\n\n  render() {\n    const shouldRedirect = this.state.shouldRedirect;\n    if (shouldRedirect) return React.createElement(Redirect, {\n      to: \"/game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n    return React.createElement(\"main\", {\n      className: style.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.renderForm()), React.createElement(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchLogin: userInfo => dispatch(getToken(userInfo))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\nLogin.propTypes = {\n  dispatchLogin: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Login/index.jsx"],"names":["React","Component","PropTypes","connect","Redirect","Link","getToken","style","logo","generateGravatar","validateEmail","Login","constructor","props","state","name","email","shouldRedirect","invalidEmail","handleChange","bind","handleSubmit","event","dispatchLogin","gravatar","preventDefault","setState","target","value","renderForm","form","input","play","length","settings","render","main","mapDispatchToProps","dispatch","userInfo","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getToken } from '../../redux/actions';\nimport style from './Login.module.css';\nimport logo from '../../assets/Trivia.png';\nimport { generateGravatar, validateEmail } from './helpers';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n      shouldRedirect: false,\n      invalidEmail: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(event) {\n    const { dispatchLogin } = this.props;\n    const { name, email } = this.state;\n    const gravatar = generateGravatar(email);\n\n    event.preventDefault();\n    await dispatchLogin(({ name, email, gravatar }));\n    this.setState({ shouldRedirect: true });\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value }, () => (\n      (name === 'email' && validateEmail(value))\n        ? this.setState({ invalidEmail: false })\n        : this.setState({ invalidEmail: true })));\n  }\n\n  renderForm() {\n    const { name, email, invalidEmail } = this.state;\n    return (\n      <form className={ style.form } onSubmit={ this.handleSubmit }>\n        <input\n          data-testid=\"input-player-name\"\n          type=\"text\"\n          name=\"name\"\n          className={ style.input }\n          placeholder=\"Digite seu nome\"\n          value={ name }\n          onChange={ this.handleChange }\n        />\n        <input\n          data-testid=\"input-gravatar-email\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Digite seu e-mail com gravatar\"\n          value={ email }\n          className={ style.input }\n          onChange={ this.handleChange }\n        />\n        <button\n          type=\"submit\"\n          title=\"Clique aqui para jogar\"\n          className={ style.play }\n          data-testid=\"btn-play\"\n          disabled={ name.length < 1 || invalidEmail }\n        >\n          Jogar\n        </button>\n\n        <Link to=\"/settings\">\n          <button\n            className={ style.settings }\n            type=\"button\"\n            data-testid=\"btn-settings\"\n          >\n            Configurações\n          </button>\n        </Link>\n      </form>\n    );\n  }\n\n  render() {\n    const { shouldRedirect } = this.state;\n    if (shouldRedirect) return <Redirect to=\"/game\" />;\n\n    return (\n      <main className={ style.main }>\n        <article>\n          {this.renderForm()}\n        </article>\n        <article>\n          <img src={ logo } alt=\"Logo\" />\n        </article>\n      </main>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLogin: (userInfo) => dispatch(getToken(userInfo)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  dispatchLogin: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}