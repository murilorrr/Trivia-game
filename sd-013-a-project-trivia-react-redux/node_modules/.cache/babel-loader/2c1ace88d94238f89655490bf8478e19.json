{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/HeaderGame.jsx\";\n// React\nimport React, { Component } from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux'; // Helpers\n\nimport gravatar from '../helpers/gravatarAPI';\n\nclass HeaderGame extends Component {\n  constructor(props) {\n    // Super marked as \"deprecated\"\n    super(props);\n    this.playerLocalStorage = this.playerLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.playerLocalStorage();\n  }\n\n  getScoreFromLocalStorage() {\n    const playerlocal = localStorage.getItem('state');\n\n    const _JSON$parse = JSON.parse(playerlocal),\n          score = _JSON$parse.player.score;\n\n    return score;\n  }\n\n  playerLocalStorage() {\n    const _this$props = this.props,\n          playerEmail = _this$props.playerEmail,\n          playerName = _this$props.playerName;\n    /*\n      state: {\n          player: {\n          name,\n          assertions,\n          score,\n          gravatarEmail\n        },\n      }\n    */\n\n    const player = {\n      player: {\n        name: playerName,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: gravatar(playerEmail)\n      }\n    };\n    window.localStorage.setItem('state', JSON.stringify(player));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          playerEmail = _this$props2.playerEmail,\n          playerName = _this$props2.playerName;\n    const gravatarSrc = gravatar(playerEmail);\n    return React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: gravatarSrc,\n      id: \"header-profile-picture\",\n      \"data-testid\": \"header-profile-picture\",\n      alt: \"gravatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"header-profile-picture\",\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, playerName), React.createElement(\"span\", {\n      style: {\n        display: 'block'\n      },\n      id: \"header-score\",\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.getScoreFromLocalStorage()));\n  }\n\n}\n\nHeaderGame.propTypes = {\n  playerName: PropTypes.string.isRequired,\n  playerEmail: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = store => ({\n  playerName: store.login.nome,\n  playerEmail: store.login.email,\n  assertions: store.game.assertions\n});\n\nexport default connect(mapStateToProps, null)(HeaderGame);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/HeaderGame.jsx"],"names":["React","Component","PropTypes","connect","gravatar","HeaderGame","constructor","props","playerLocalStorage","bind","componentDidMount","getScoreFromLocalStorage","playerlocal","localStorage","getItem","JSON","parse","score","player","playerEmail","playerName","name","assertions","gravatarEmail","window","setItem","stringify","render","gravatarSrc","display","propTypes","string","isRequired","mapStateToProps","store","login","nome","email","game"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,kBAAL;AACD;;AAEDG,EAAAA,wBAAwB,GAAG;AACzB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;;AADyB,wBAEKC,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAFL;AAAA,UAEPK,KAFO,eAEjBC,MAFiB,CAEPD,KAFO;;AAGzB,WAAOA,KAAP;AACD;;AAEDT,EAAAA,kBAAkB,GAAG;AAAA,wBAC4B,IAD5B,CACXD,KADW;AAAA,UACFY,WADE,eACFA,WADE;AAAA,UACWC,UADX,eACWA,UADX;AAEnB;;;;;;;;;;;AAUA,UAAMF,MAAM,GAAG;AAAEA,MAAAA,MAAM,EAAE;AACvBG,QAAAA,IAAI,EAAED,UADiB;AAEvBE,QAAAA,UAAU,EAAE,CAFW;AAGvBL,QAAAA,KAAK,EAAE,CAHgB;AAIvBM,QAAAA,aAAa,EAAEnB,QAAQ,CAACe,WAAD;AAJA;AAAV,KAAf;AAOAK,IAAAA,MAAM,CAACX,YAAP,CAAoBY,OAApB,CAA4B,OAA5B,EAAqCV,IAAI,CAACW,SAAL,CAAeR,MAAf,CAArC;AACD;;AAEDS,EAAAA,MAAM,GAAG;AAAA,yBACwC,IADxC,CACCpB,KADD;AAAA,UACUY,WADV,gBACUA,WADV;AAAA,UACuBC,UADvB,gBACuBA,UADvB;AAEP,UAAMQ,WAAW,GAAGxB,QAAQ,CAACe,WAAD,CAA5B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,MAAA,GAAG,EAAGS,WADR;AAEE,MAAA,EAAE,EAAC,wBAFL;AAGE,qBAAY,wBAHd;AAIE,MAAA,GAAG,EAAC,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE;AACE,MAAA,EAAE,EAAC,wBADL;AAEE,qBAAY,oBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIIR,UAJJ,CATF,EAgBE;AACE,MAAA,KAAK,EAAG;AAAES,QAAAA,OAAO,EAAE;AAAX,OADV;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,qBAAY,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKlB,wBAAL,EALH,CAhBF,CADF;AA0BD;;AApEgC;;AAuEnCN,UAAU,CAACyB,SAAX,GAAuB;AACrBV,EAAAA,UAAU,EAAElB,SAAS,CAAC6B,MAAV,CAAiBC,UADR;AAErBb,EAAAA,WAAW,EAAEjB,SAAS,CAAC6B,MAAV,CAAiBC;AAFT,CAAvB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,UAAU,EAAEc,KAAK,CAACC,KAAN,CAAYC,IADU;AAElCjB,EAAAA,WAAW,EAAEe,KAAK,CAACC,KAAN,CAAYE,KAFS;AAGlCf,EAAAA,UAAU,EAAEY,KAAK,CAACI,IAAN,CAAWhB;AAHW,CAAZ,CAAxB;;AAMA,eAAenB,OAAO,CAAC8B,eAAD,EAAkB,IAAlB,CAAP,CAA+B5B,UAA/B,CAAf","sourcesContent":["// React\nimport React, { Component } from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// Helpers\nimport gravatar from '../helpers/gravatarAPI';\n\nclass HeaderGame extends Component {\n  constructor(props) {\n    // Super marked as \"deprecated\"\n    super(props);\n    this.playerLocalStorage = this.playerLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.playerLocalStorage();\n  }\n\n  getScoreFromLocalStorage() {\n    const playerlocal = localStorage.getItem('state');\n    const { player: { score } } = JSON.parse(playerlocal);\n    return score;\n  }\n\n  playerLocalStorage() {\n    const { props: { playerEmail, playerName } } = this;\n    /*\n      state: {\n          player: {\n          name,\n          assertions,\n          score,\n          gravatarEmail\n        },\n      }\n    */\n    const player = { player: {\n      name: playerName,\n      assertions: 0,\n      score: 0,\n      gravatarEmail: gravatar(playerEmail),\n    } };\n\n    window.localStorage.setItem('state', JSON.stringify(player));\n  }\n\n  render() {\n    const { props: { playerEmail, playerName } } = this;\n    const gravatarSrc = gravatar(playerEmail);\n    return (\n      <header>\n        {/* Gravatar */}\n        <img\n          src={ gravatarSrc }\n          id=\"header-profile-picture\"\n          data-testid=\"header-profile-picture\"\n          alt=\"gravatar\"\n        />\n        {/* Nome do jogador */}\n        <span\n          id=\"header-profile-picture\"\n          data-testid=\"header-player-name\"\n        >\n          { playerName }\n        </span>\n        {/* Pontuação */}\n        <span\n          style={ { display: 'block' } }\n          id=\"header-score\"\n          data-testid=\"header-score\"\n        >\n          {this.getScoreFromLocalStorage()}\n        </span>\n      </header>\n    );\n  }\n}\n\nHeaderGame.propTypes = {\n  playerName: PropTypes.string.isRequired,\n  playerEmail: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  playerName: store.login.nome,\n  playerEmail: store.login.email,\n  assertions: store.game.assertions,\n});\n\nexport default connect(mapStateToProps, null)(HeaderGame);\n"]},"metadata":{},"sourceType":"module"}