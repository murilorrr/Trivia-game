{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Feedback.jsx\";\n// React\nimport React, { Component } from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux'; // Children\n\nimport HeaderGame from '../components/HeaderGame';\nimport PlayAgain from '../components/PlayAgain';\nimport ViewRanking from '../components/ViewRanking';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.renderMessage = this.renderMessage.bind(this);\n  }\n\n  renderMessage() {\n    const assertions = this.props.assertions;\n    const three = 3;\n\n    if (assertions < three) {\n      return 'Podia ser melhor...';\n    }\n\n    return 'Mandou bem!';\n  }\n\n  renderFeedbackScore() {\n    const assertions = this.props.assertions;\n    return React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, assertions);\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(HeaderGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.renderMessage()), React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(PlayAgain, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(ViewRanking, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = store => ({\n  assertions: store.game.assertions // Número de acertos\n\n});\n\nexport default connect(mapStateToProps, null)(Feedback);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Feedback.jsx"],"names":["React","Component","PropTypes","connect","HeaderGame","PlayAgain","ViewRanking","Feedback","constructor","props","renderMessage","bind","assertions","three","renderFeedbackScore","render","propTypes","number","isRequired","mapStateToProps","store","game"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,aAAa,GAAG;AAAA,UACNE,UADM,GACS,KAAKH,KADd,CACNG,UADM;AAEd,UAAMC,KAAK,GAAG,CAAd;;AACA,QAAID,UAAU,GAAGC,KAAjB,EAAwB;AACtB,aAAO,qBAAP;AACD;;AACD,WAAO,aAAP;AACD;;AAEDC,EAAAA,mBAAmB,GAAG;AAAA,UACZF,UADY,GACG,KAAKH,KADR,CACZG,UADY;AAEpB,WAAO;AAAM,qBAAY,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CA,UAA7C,CAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAM,qBAAY,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKL,aAAL,EADJ,CAFF,EAKE;AAAM,qBAAY,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AAnC8B;;AAsCjCH,QAAQ,CAACS,SAAT,GAAqB;AACnBJ,EAAAA,UAAU,EAAEV,SAAS,CAACe,MAAV,CAAiBC;AADV,CAArB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,UAAU,EAAEQ,KAAK,CAACC,IAAN,CAAWT,UADW,CACC;;AADD,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACgB,eAAD,EAAkB,IAAlB,CAAP,CAA+BZ,QAA/B,CAAf","sourcesContent":["// React\nimport React, { Component } from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// Children\nimport HeaderGame from '../components/HeaderGame';\nimport PlayAgain from '../components/PlayAgain';\nimport ViewRanking from '../components/ViewRanking';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMessage = this.renderMessage.bind(this);\n  }\n\n  renderMessage() {\n    const { assertions } = this.props;\n    const three = 3;\n    if (assertions < three) {\n      return 'Podia ser melhor...';\n    }\n    return 'Mandou bem!';\n  }\n\n  renderFeedbackScore() {\n    const { assertions } = this.props;\n    return <span data-testid=\"feedback-total-question\">{assertions}</span>;\n  }\n\n  render() {\n    return (\n      <section>\n        <HeaderGame />\n        <span data-testid=\"feedback-text\">\n          { this.renderMessage() }\n        </span>\n        <span data-testid=\"feedback-total-score\">\n          {}\n        </span>\n        <PlayAgain />\n        <ViewRanking />\n      </section>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (store) => ({\n  assertions: store.game.assertions, // Número de acertos\n});\n\nexport default connect(mapStateToProps, null)(Feedback);\n"]},"metadata":{},"sourceType":"module"}