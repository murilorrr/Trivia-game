{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { fetchCategories } from '../helpers/apiTrivia';\nimport { setCategory, setDifficult, setAllCategory, setNumberOfQuestions } from '../redux/actions/settings';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    const _this$props = this.props,\n          value = _this$props.value,\n          category = _this$props.category,\n          difficult = _this$props.difficult;\n    this.state = {\n      allcategories: [],\n      value,\n      category,\n      difficult\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n    this.renderValues = this.renderValues.bind(this);\n    this.renderDifficulty = this.renderDifficulty.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const _this$props2 = this.props,\n          allcategories = _this$props2.allcategories,\n          configGameAllCategoriesDispatch = _this$props2.configGameAllCategoriesDispatch;\n\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      configGameAllCategoriesDispatch(response);\n      this.setState({\n        allcategories: response\n      });\n    } else {\n      const _this$props3 = this.props,\n            value = _this$props3.value,\n            category = _this$props3.category,\n            difficult = _this$props3.difficult;\n      this.setState({\n        allcategories,\n        value,\n        category,\n        difficult\n      });\n    }\n  }\n\n  mapAllCategories(param) {\n    const category = this.state.category;\n    return param.map(el => React.createElement(\"option\", {\n      selected: el.id === category,\n      key: el.id,\n      value: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, el.name));\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  renderDifficulty() {\n    const difficult = this.state.difficult;\n    const configGameDifficultDispatch = this.props.configGameDifficultDispatch;\n\n    function onclick(e) {\n      this.handleChange(e);\n      return configGameDifficultDispatch(difficult);\n    }\n\n    return React.createElement(\"label\", {\n      htmlFor: \"difficult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Select Difficulty:\", React.createElement(\"select\", {\n      select: difficult,\n      id: \"difficult\",\n      name: \"difficult\",\n      onChange: e => onclick(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: value === difficult,\n      value: \"Any Difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Any Difficulty\"), React.createElement(\"option\", {\n      selected: value === difficult,\n      value: \"easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(\"option\", {\n      selected: value === difficult,\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      selected: value === difficult,\n      value: \"hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Hard\")));\n  }\n\n  renderValues() {\n    const value = this.state.value;\n    const configGameNumberDispatch = this.props.configGameNumberDispatch;\n\n    function onclick(e) {\n      this.handleChange(e);\n      return configGameNumberDispatch(value);\n    }\n\n    return React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Number of Questions:\", React.createElement(\"select\", {\n      id: \"value\",\n      name: \"value\",\n      onChange: e => onclick(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: value === '15',\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      selected: value === '10',\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      selected: value === '15',\n      value: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"15\"), React.createElement(\"option\", {\n      selected: value === '20',\n      value: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"20\")));\n  }\n\n  render() {\n    const _this$state = this.state,\n          allcategories = _this$state.allcategories,\n          category = _this$state.category;\n    const configGameCategoryDispatch = this.props.configGameCategoryDispatch;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"settings-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), this.renderValues(), React.createElement(\"label\", {\n      htmlFor: \"categorias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Select Category:\", React.createElement(\"select\", {\n      id: \"categorias\",\n      name: \"categorias\",\n      onChange: e => {\n        this.handleChange(e);\n        return configGameCategoryDispatch(category);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.mapAllCategories(allcategories))), this.renderDifficulty(), React.createElement(\"div\", {\n      className: \"btn-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Go back\"), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Save Config\")));\n  }\n\n}\n\nSettings.propTypes = {\n  allcategories: propTypes.arrayOf(propTypes.object).isRequired,\n  category: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n  difficult: propTypes.number.isRequired,\n  configGameAllCategoriesDispatch: propTypes.func.isRequired,\n  configGameCategoryDispatch: propTypes.func.isRequired,\n  configGameNumberDispatch: propTypes.func.isRequired,\n  configGameDifficultDispatch: propTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  value: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allCategories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  configGameCategoryDispatch: payload => dispatch(setCategory(payload)),\n  configGameNumberDispatch: payload => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: payload => dispatch(setDifficult(payload)),\n  configGameAllCategoriesDispatch: payload => dispatch(setAllCategory(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.js"],"names":["React","connect","propTypes","fetchCategories","setCategory","setDifficult","setAllCategory","setNumberOfQuestions","Settings","Component","constructor","props","value","category","difficult","state","allcategories","handleChange","bind","mapAllCategories","setAllcategories","renderValues","renderDifficulty","componentDidMount","configGameAllCategoriesDispatch","length","response","setState","param","map","el","id","name","target","configGameDifficultDispatch","onclick","e","configGameNumberDispatch","render","configGameCategoryDispatch","arrayOf","object","isRequired","string","number","func","mapStateToProps","settings","numberOfQuestions","allCategories","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { fetchCategories } from '../helpers/apiTrivia';\nimport { setCategory,\n  setDifficult,\n  setAllCategory,\n  setNumberOfQuestions } from '../redux/actions/settings';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value, category, difficult } = this.props;\n    this.state = {\n      allcategories: [],\n      value,\n      category,\n      difficult,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n    this.renderValues = this.renderValues.bind(this);\n    this.renderDifficulty = this.renderDifficulty.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const { allcategories, configGameAllCategoriesDispatch } = this.props;\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      configGameAllCategoriesDispatch(response);\n      this.setState({ allcategories: response });\n    } else {\n      const { value, category, difficult } = this.props;\n      this.setState({ allcategories, value, category, difficult });\n    }\n  }\n\n  mapAllCategories(param) {\n    const { category } = this.state;\n    return param.map((el) => (\n      <option\n        selected={ el.id === category }\n        key={ el.id }\n        value={ el.id }\n      >\n        {el.name}\n      </option>));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  renderDifficulty() {\n    const { difficult } = this.state;\n    const { configGameDifficultDispatch } = this.props;\n    function onclick(e) {\n      this.handleChange(e);\n      return configGameDifficultDispatch(difficult);\n    }\n    return (\n      <label htmlFor=\"difficult\">\n        Select Difficulty:\n        <select\n          select={ difficult }\n          id=\"difficult\"\n          name=\"difficult\"\n          onChange={ (e) => onclick(e) }\n        >\n          <option selected={ value === difficult } value=\"Any Difficulty\">Any Difficulty</option>\n          <option selected={ value === difficult } value=\"easy\">Easy</option>\n          <option selected={ value === difficult } value=\"medium\">Medium</option>\n          <option selected={ value === difficult } value=\"hard\">Hard</option>\n        </select>\n      </label>\n    );\n  }\n\n  renderValues() {\n    const { value } = this.state;\n    const { configGameNumberDispatch } = this.props;\n    function onclick(e) {\n      this.handleChange(e);\n      return configGameNumberDispatch(value);\n    }\n    return (\n      <label htmlFor=\"value\">\n        Number of Questions:\n        <select\n          id=\"value\"\n          name=\"value\"\n          onChange={ (e) => onclick(e) }\n        >\n          <option selected={ value === '15' } value=\"5\">5</option>\n          <option selected={ value === '10' } value=\"10\">10</option>\n          <option selected={ value === '15' } value=\"15\">15</option>\n          <option selected={ value === '20' } value=\"20\">20</option>\n        </select>\n      </label>);\n  }\n\n  render() {\n    const { allcategories, category } = this.state;\n    const { configGameCategoryDispatch,\n    } = this.props;\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Configurações</h1>\n        {this.renderValues()}\n        <label htmlFor=\"categorias\">\n          Select Category:\n          <select\n            id=\"categorias\"\n            name=\"categorias\"\n            onChange={ (e) => {\n              this.handleChange(e);\n              return configGameCategoryDispatch(category);\n            } }\n          >\n            {this.mapAllCategories(allcategories)}\n          </select>\n        </label>\n        {this.renderDifficulty()}\n\n        <div className=\"btn-div\">\n          <button type=\"button\">Go back</button>\n          <button type=\"button\">Save Config</button>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nSettings.propTypes = {\n  allcategories: propTypes.arrayOf(propTypes.object).isRequired,\n  category: propTypes.string.isRequired,\n  value: propTypes.number.isRequired,\n  difficult: propTypes.number.isRequired,\n  configGameAllCategoriesDispatch: propTypes.func.isRequired,\n  configGameCategoryDispatch: propTypes.func.isRequired,\n  configGameNumberDispatch: propTypes.func.isRequired,\n  configGameDifficultDispatch: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allCategories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  configGameCategoryDispatch: (payload) => dispatch(setCategory(payload)),\n  configGameNumberDispatch: (payload) => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: (payload) => dispatch(setDifficult(payload)),\n  configGameAllCategoriesDispatch: (payload) => dispatch(setAllCategory(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n"]},"metadata":{},"sourceType":"module"}