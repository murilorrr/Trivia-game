{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Gamepage.jsx\";\nimport React from 'react';\nimport apiTrivia from '../helpers/apiTrivia';\nimport HeaderGame from '../components/HeaderGame';\nimport Loading from '../components/Loading';\n\nclass Gamepage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      results: {},\n      loading: true\n    };\n    this.answerRandom = this.answerRandom.bind(this);\n    this.inicialiGame = this.inicialiGame.bind(this);\n  }\n\n  componentDidMount() {\n    this.inicialiGame();\n  }\n\n  inicialiGame() {\n    const token = localStorage.getItem('token');\n    apiTrivia(token).then(results => this.setState({\n      results\n    }));\n    this.setState({\n      loading: false\n    });\n  }\n\n  answerRandom() {\n    const answers = [];\n    const results = this.state.results;\n    const incorretas = results[0].incorrect_answers;\n    const correta = [results[0].correct_answer];\n    answers.push(...incorretas.map((answer, index) => React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": `wrong-answer-${index}`,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, answer)));\n    answers.push(...correta.map((answer, index) => React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"correct-answer\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, answer)));\n    console.log(answers);\n    return answers.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(({\n      value\n    }) => value);\n  }\n\n  render() {\n    const _this$state = this.state,\n          results = _this$state.results,\n          loading = _this$state.loading;\n    if (loading) return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n    const category = results[0].category;\n    const question = results[0].question;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(HeaderGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \"Sou uma P\\xE1gina de game\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, question), this.answerRandom()));\n  }\n\n}\n\nexport default Gamepage;","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Gamepage.jsx"],"names":["React","apiTrivia","HeaderGame","Loading","Gamepage","Component","constructor","state","results","loading","answerRandom","bind","inicialiGame","componentDidMount","token","localStorage","getItem","then","setState","answers","incorretas","incorrect_answers","correta","correct_answer","push","map","answer","index","console","log","value","sort","Math","random","a","b","render","category","question"],"mappings":"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","sourcesContent":["import React from 'react';\nimport apiTrivia from '../helpers/apiTrivia';\nimport HeaderGame from '../components/HeaderGame';\nimport Loading from '../components/Loading';\n\nclass Gamepage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      results: {},\n      loading: true,\n    };\n    this.answerRandom = this.answerRandom.bind(this);\n    this.inicialiGame = this.inicialiGame.bind(this);\n  }\n\n  componentDidMount() {\n    this.inicialiGame();\n  }\n\n  inicialiGame() {\n    const token = localStorage.getItem('token');\n    apiTrivia(token).then((results) => this.setState({ results }));\n    this.setState({ loading: false });\n  }\n\n  answerRandom() {\n    const answers = [];\n    const { results } = this.state;\n    const incorretas = results[0].incorrect_answers;\n    const correta = [results[0].correct_answer];\n    answers.push(...incorretas\n      .map((answer, index) => (\n        <button\n          type=\"button\"\n          data-testid={ `wrong-answer-${index}` }\n          key={ index }\n        >\n          {answer}\n\n        </button>)));\n    answers.push(...correta\n      .map((answer, index) => (\n        <button\n          type=\"button\"\n          data-testid=\"correct-answer\"\n          key={ index }\n        >\n          {answer}\n\n        </button>)));\n    console.log(answers);\n    return answers\n      .map((value) => ({ value, sort: Math.random() }))\n      .sort((a, b) => a.sort - b.sort)\n      .map(({ value }) => value);\n  }\n\n  render() {\n    const { results, loading } = this.state;\n    if (loading) return (<Loading />);\n    const { category } = results[0];\n    const { question } = results[0];\n    return (\n      <div>\n        <HeaderGame />\n        Sou uma PÃ¡gina de game\n        <div>\n          <h3 data-testid=\"question-category\">\n            { category }\n          </h3>\n          <p data-testid=\"question-text\">\n            { question }\n          </p>\n          {this.answerRandom()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gamepage;\n"]},"metadata":{},"sourceType":"module"}