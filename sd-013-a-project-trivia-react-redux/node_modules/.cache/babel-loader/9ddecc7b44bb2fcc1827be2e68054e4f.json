{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/NextBtn.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { pressNextBtn } from '../redux/actions/pressBtn';\n\nclass NextBtn extends React.Component {\n  constructor() {\n    super();\n    this.triggerNextQuestion = this.triggerNextQuestion.bind(this);\n  }\n\n  triggerNextQuestion() {\n    const _this$props = this.props,\n          pushBtn = _this$props.pushBtn,\n          games = _this$props.games,\n          numberOfQuestion = _this$props.numberOfQuestion;\n    if (Object.keys(games).length !== numberOfQuestion - 1) pushBtn();\n  }\n\n  render() {\n    const disable = this.props.disable;\n    return React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.triggerNextQuestion,\n      \"data-testid\": \"btn-next\",\n      disabled: disable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\");\n  }\n\n}\n\nNextBtn.propTypes = {\n  pushBtn: PropTypes.func.isRequired,\n  disable: PropTypes.bool.isRequired,\n  games: PropTypes.shape({\n    arra\n  })\n};\n\nconst mapStateToProps = state => ({\n  disable: state.game.disable,\n  games: state.game.games,\n  numberOfQuestion: state.game.question\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pushBtn: () => dispatch(pressNextBtn())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextBtn);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/NextBtn.jsx"],"names":["React","connect","PropTypes","pressNextBtn","NextBtn","Component","constructor","triggerNextQuestion","bind","props","pushBtn","games","numberOfQuestion","Object","keys","length","render","disable","propTypes","func","isRequired","bool","shape","arra","mapStateToProps","state","game","question","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDD,EAAAA,mBAAmB,GAAG;AAAA,wBACyB,KAAKE,KAD9B;AAAA,UACZC,OADY,eACZA,OADY;AAAA,UACHC,KADG,eACHA,KADG;AAAA,UACIC,gBADJ,eACIA,gBADJ;AAEpB,QAAIC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAAnB,KAA8BH,gBAAgB,GAAG,CAArD,EAAwDF,OAAO;AAChE;;AAEDM,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKR,KADlB,CACCQ,OADD;AAEP,WACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,KAAKV,mBAFjB;AAGE,qBAAY,UAHd;AAIE,MAAA,QAAQ,EAAGU,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAUD;;AAvBmC;;AA0BtCb,OAAO,CAACc,SAAR,GAAoB;AAClBR,EAAAA,OAAO,EAAER,SAAS,CAACiB,IAAV,CAAeC,UADN;AAElBH,EAAAA,OAAO,EAAEf,SAAS,CAACmB,IAAV,CAAeD,UAFN;AAGlBT,EAAAA,KAAK,EAAET,SAAS,CAACoB,KAAV,CAAgB;AACrBC,IAAAA;AADqB,GAAhB;AAHW,CAApB;;AAQA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,OAAO,EAAEQ,KAAK,CAACC,IAAN,CAAWT,OADc;AAElCN,EAAAA,KAAK,EAAEc,KAAK,CAACC,IAAN,CAAWf,KAFgB;AAGlCC,EAAAA,gBAAgB,EAAEa,KAAK,CAACC,IAAN,CAAWC;AAHK,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,OAAO,EAAE,MAAOmB,QAAQ,CAAC1B,YAAY,EAAb;AADgB,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACuB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CxB,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { pressNextBtn } from '../redux/actions/pressBtn';\n\nclass NextBtn extends React.Component {\n  constructor() {\n    super();\n    this.triggerNextQuestion = this.triggerNextQuestion.bind(this);\n  }\n\n  triggerNextQuestion() {\n    const { pushBtn, games, numberOfQuestion } = this.props;\n    if (Object.keys(games).length !== numberOfQuestion - 1) pushBtn();\n  }\n\n  render() {\n    const { disable } = this.props;\n    return (\n      <button\n        type=\"button\"\n        onClick={ this.triggerNextQuestion }\n        data-testid=\"btn-next\"\n        disabled={ disable }\n      >\n        Pr√≥ximo\n      </button>\n    );\n  }\n}\n\nNextBtn.propTypes = {\n  pushBtn: PropTypes.func.isRequired,\n  disable: PropTypes.bool.isRequired,\n  games: PropTypes.shape({\n    arra\n  })\n};\n\nconst mapStateToProps = (state) => ({\n  disable: state.game.disable,\n  games: state.game.games,\n  numberOfQuestion: state.game.question,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  pushBtn: () => (dispatch(pressNextBtn())),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextBtn);\n"]},"metadata":{},"sourceType":"module"}