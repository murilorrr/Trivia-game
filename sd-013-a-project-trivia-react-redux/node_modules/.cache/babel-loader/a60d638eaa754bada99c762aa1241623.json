{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Gamepage.jsx\";\n// React\nimport React from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux';\nimport { pressQuestionBtn } from '../redux/actions/pressBtn'; // Children\n\nimport HeaderGame from '../components/HeaderGame';\nimport NextBtn from '../components/NextBtn'; // Styles\n\nimport '../styles/Gamepage.css';\n\nclass Gamepage extends React.Component {\n  constructor() {\n    super();\n    this.answerRandom = this.answerRandom.bind(this);\n    this.enableNextBtn = this.enableNextBtn.bind(this);\n    this.sendScoreToLocalStorage = this.sendScoreToLocalStorage.bind(this);\n  }\n\n  enableNextBtn() {\n    const enableNextBtnDispatch = this.props.enableNextBtnDispatch;\n    enableNextBtnDispatch();\n  }\n\n  sendScoreToLocalStorage({\n    target\n  }) {\n    if (target.className !== 'incorrect-answer') {\n      // const { timer=1 } = this.state;\n      const _this$props = this.props,\n            games = _this$props.games,\n            questionNumber = _this$props.questionNumber;\n      const difficulty = games[questionNumber].difficulty;\n      console.log(difficulty);\n      const obj = {\n        hard: 3,\n        medium: 2,\n        easy: 1\n      };\n      let valor;\n\n      switch (difficulty) {\n        case 'hard':\n          valor = obj.hard;\n          break;\n\n        case 'medium':\n          valor = obj.medium;\n          break;\n\n        case 'easy':\n          valor = obj.easy;\n          break;\n\n        default:\n      }\n\n      const state = JSON.parse(localStorage.getItem('state'));\n      const defaultReward = 10;\n      state.score += defaultReward + valor;\n      console.log(state);\n      localStorage.setItem('state', JSON.stringify(state));\n    }\n  }\n\n  handleAnswerClick(event) {\n    // Adiciona estilo para a alternativa correta\n    const correta = document.querySelector('#correct-answer');\n    correta.classList.add('correct-highlight'); // Adiciona estilo para as alternativas incorretas\n\n    const incorretas = document.querySelectorAll('.incorrect-answer');\n    incorretas.forEach(el => el.classList.add('incorrect-highlight')); // Habilitar nova pergunta\n\n    this.enableNextBtn(); // Enviar score para o state do LocalStorage\n\n    this.sendScoreToLocalStorage(event);\n  }\n\n  answerRandom() {\n    const answers = [];\n    const _this$props2 = this.props,\n          games = _this$props2.games,\n          questionNumber = _this$props2.questionNumber;\n    const incorretas = games[questionNumber].incorrect_answers;\n    const correta = [games[questionNumber].correct_answer];\n    answers.push(...incorretas.map((answer, index) => React.createElement(\"button\", {\n      type: \"button\",\n      className: \"incorrect-answer\",\n      \"data-testid\": `wrong-answer-${index}`,\n      key: `wrong-answer-${index}`,\n      onClick: evt => this.handleAnswerClick(evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, answer)));\n    answers.push(...correta.map(answer => React.createElement(\"button\", {\n      type: \"button\",\n      id: \"correct-answer\",\n      \"data-testid\": \"correct-answer\",\n      key: \"correct-answer\",\n      onClick: evt => this.handleAnswerClick(evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, answer)));\n    return answers.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(({\n      value\n    }) => value);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          games = _this$props3.games,\n          questionNumber = _this$props3.questionNumber;\n    const _games$questionNumber = games[questionNumber],\n          category = _games$questionNumber.category,\n          question = _games$questionNumber.question;\n    return React.createElement(\"section\", {\n      className: \"Gamepage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(HeaderGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"Sou uma P\\xE1gina de game\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, question), this.answerRandom()), React.createElement(NextBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  }\n\n}\n\nGamepage.propTypes = {\n  games: PropTypes.arrayOf(PropTypes.object).isRequired,\n  questionNumber: PropTypes.number.isRequired,\n  enableNextBtnDispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  games: state.game.games,\n  questionNumber: state.game.question\n});\n\nconst mapDispatchToProps = dispatch => ({\n  enableNextBtnDispatch: () => dispatch(pressQuestionBtn())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gamepage);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Gamepage.jsx"],"names":["React","PropTypes","connect","pressQuestionBtn","HeaderGame","NextBtn","Gamepage","Component","constructor","answerRandom","bind","enableNextBtn","sendScoreToLocalStorage","enableNextBtnDispatch","props","target","className","games","questionNumber","difficulty","console","log","obj","hard","medium","easy","valor","state","JSON","parse","localStorage","getItem","defaultReward","score","setItem","stringify","handleAnswerClick","event","correta","document","querySelector","classList","add","incorretas","querySelectorAll","forEach","el","answers","incorrect_answers","correct_answer","push","map","answer","index","evt","value","sort","Math","random","a","b","render","category","question","propTypes","arrayOf","object","isRequired","number","func","mapStateToProps","game","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// React\nimport React from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { pressQuestionBtn } from '../redux/actions/pressBtn';\n\n// Children\nimport HeaderGame from '../components/HeaderGame';\nimport NextBtn from '../components/NextBtn';\n\n// Styles\nimport '../styles/Gamepage.css';\n\nclass Gamepage extends React.Component {\n  constructor() {\n    super();\n\n    this.answerRandom = this.answerRandom.bind(this);\n    this.enableNextBtn = this.enableNextBtn.bind(this);\n    this.sendScoreToLocalStorage = this.sendScoreToLocalStorage.bind(this);\n  }\n\n  enableNextBtn() {\n    const { enableNextBtnDispatch } = this.props;\n    enableNextBtnDispatch();\n  }\n\n  sendScoreToLocalStorage({ target }) {\n    if (target.className !== 'incorrect-answer') {\n    // const { timer=1 } = this.state;\n      const { games, questionNumber } = this.props;\n      const { difficulty } = games[questionNumber];\n      console.log(difficulty);\n      const obj = { hard: 3, medium: 2, easy: 1 };\n      let valor;\n      switch (difficulty) {\n      case 'hard':\n        valor = obj.hard;\n        break;\n      case 'medium':\n        valor = obj.medium;\n        break;\n      case 'easy':\n        valor = obj.easy;\n        break;\n      default:\n      }\n      const state = JSON.parse(localStorage.getItem('state'));\n      const defaultReward = 10;\n      state.score += defaultReward + valor;\n      console.log(state);\n      localStorage.setItem('state', JSON.stringify(state));\n    }\n  }\n\n  handleAnswerClick(event) {\n    // Adiciona estilo para a alternativa correta\n    const correta = document.querySelector('#correct-answer');\n    correta.classList.add('correct-highlight');\n\n    // Adiciona estilo para as alternativas incorretas\n    const incorretas = document.querySelectorAll('.incorrect-answer');\n    incorretas.forEach((el) => el.classList.add('incorrect-highlight'));\n\n    // Habilitar nova pergunta\n    this.enableNextBtn();\n\n    // Enviar score para o state do LocalStorage\n    this.sendScoreToLocalStorage(event);\n  }\n\n  answerRandom() {\n    const answers = [];\n    const { games, questionNumber } = this.props;\n    const incorretas = games[questionNumber].incorrect_answers;\n    const correta = [games[questionNumber].correct_answer];\n\n    answers.push(...incorretas\n      .map((answer, index) => (\n        <button\n          type=\"button\"\n          className=\"incorrect-answer\"\n          data-testid={ `wrong-answer-${index}` }\n          key={ `wrong-answer-${index}` }\n          onClick={ (evt) => this.handleAnswerClick(evt) }\n        >\n          {answer}\n\n        </button>)));\n    answers.push(...correta\n      .map((answer) => (\n        <button\n          type=\"button\"\n          id=\"correct-answer\"\n          data-testid=\"correct-answer\"\n          key=\"correct-answer\"\n          onClick={ (evt) => this.handleAnswerClick(evt) }\n        >\n          {answer}\n\n        </button>)));\n    return answers\n      .map((value) => ({ value, sort: Math.random() }))\n      .sort((a, b) => a.sort - b.sort)\n      .map(({ value }) => value);\n  }\n\n  render() {\n    const { games, questionNumber } = this.props;\n    const { category, question } = games[questionNumber];\n\n    return (\n      <section className=\"Gamepage\">\n        <HeaderGame />\n        Sou uma Página de game\n        <div>\n          <h3 data-testid=\"question-category\">\n            { category }\n          </h3>\n          <p data-testid=\"question-text\">\n            { question }\n          </p>\n          {this.answerRandom()}\n        </div>\n        <NextBtn />\n      </section>\n    );\n  }\n}\n\nGamepage.propTypes = {\n  games: PropTypes.arrayOf(PropTypes.object).isRequired,\n  questionNumber: PropTypes.number.isRequired,\n  enableNextBtnDispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  games: state.game.games,\n  questionNumber: state.game.question,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  enableNextBtnDispatch: () => dispatch(pressQuestionBtn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gamepage);\n"]},"metadata":{},"sourceType":"module"}