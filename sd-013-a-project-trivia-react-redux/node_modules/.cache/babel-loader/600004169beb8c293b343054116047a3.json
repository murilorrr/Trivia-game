{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/NextBtn.jsx\";\n// React\nimport React from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux';\nimport { pressNextBtn } from '../redux/actions/pressBtn';\nimport { toggleTimer } from '../redux/actions/game';\n\nclass NextBtn extends React.Component {\n  constructor() {\n    super();\n    this.triggerNextQuestion = this.triggerNextQuestion.bind(this);\n  }\n\n  clearStyles() {\n    // Remove estilo da alternativa correta\n    const correta = document.querySelector('#correct-answer');\n    correta.classList.remove('correct-highlight');\n    correta.disabled = false; // Remove estilo das alternativas incorretas\n\n    const incorretas = document.querySelectorAll('.incorrect-highlight');\n    incorretas.forEach(el => {\n      el.classList.remove('incorrect-highlight');\n      el.disabled = false;\n    });\n  }\n\n  triggerNextQuestion() {\n    const _this$props = this.props,\n          toggleTimerDispatch = _this$props.toggleTimerDispatch,\n          setAnswers = _this$props.setAnswers;\n    toggleTimerDispatch();\n    this.clearStyles();\n    const _this$props2 = this.props,\n          pushBtn = _this$props2.pushBtn,\n          game = _this$props2.game,\n          questionNumber = _this$props2.questionNumber;\n    const numeroDePerguntas = Object.keys(game).length;\n    const feedbackString = 'Redireciona para tela de feedback';\n    if (questionNumber !== numeroDePerguntas - 1) return () => pushBtn();\n    setAnswers();\n    console.log(feedbackString);\n  }\n\n  render() {\n    const disable = this.props.disable;\n    return React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.triggerNextQuestion(),\n      \"data-testid\": \"btn-next\",\n      style: disable ? {\n        display: 'none'\n      } : {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\");\n  }\n\n}\n\nNextBtn.propTypes = {\n  game: PropTypes.arrayOf(PropTypes.object).isRequired,\n  questionNumber: PropTypes.number.isRequired,\n  disable: PropTypes.bool.isRequired,\n  pushBtn: PropTypes.func.isRequired,\n  setAnswers: PropTypes.func.isRequired,\n  toggleTimerDispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  game: state.game.game,\n  questionNumber: state.game.questionNumber,\n  disable: state.game.disable\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pushBtn: () => dispatch(pressNextBtn()),\n  toggleTimerDispatch: () => dispatch(toggleTimer())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextBtn);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/NextBtn.jsx"],"names":["React","PropTypes","connect","pressNextBtn","toggleTimer","NextBtn","Component","constructor","triggerNextQuestion","bind","clearStyles","correta","document","querySelector","classList","remove","disabled","incorretas","querySelectorAll","forEach","el","props","toggleTimerDispatch","setAnswers","pushBtn","game","questionNumber","numeroDePerguntas","Object","keys","length","feedbackString","console","log","render","disable","display","propTypes","arrayOf","object","isRequired","number","bool","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// React\nimport React from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { pressNextBtn } from '../redux/actions/pressBtn';\nimport { toggleTimer } from '../redux/actions/game';\n\nclass NextBtn extends React.Component {\n  constructor() {\n    super();\n    this.triggerNextQuestion = this.triggerNextQuestion.bind(this);\n  }\n\n  clearStyles() {\n    // Remove estilo da alternativa correta\n    const correta = document.querySelector('#correct-answer');\n    correta.classList.remove('correct-highlight');\n    correta.disabled = false;\n\n    // Remove estilo das alternativas incorretas\n    const incorretas = document.querySelectorAll('.incorrect-highlight');\n    incorretas.forEach((el) => {\n      el.classList.remove('incorrect-highlight');\n      el.disabled = false;\n    });\n  }\n\n  triggerNextQuestion() {\n    const { toggleTimerDispatch, setAnswers } = this.props;\n    toggleTimerDispatch();\n    this.clearStyles();\n    const { pushBtn, game, questionNumber } = this.props;\n    const numeroDePerguntas = Object.keys(game).length;\n    const feedbackString = 'Redireciona para tela de feedback';\n    if (questionNumber !== numeroDePerguntas - 1) return () => pushBtn();\n    setAnswers();\n    console.log(feedbackString);\n  }\n\n  render() {\n    const { disable } = this.props;\n    return (\n      <button\n        type=\"button\"\n        onClick={ () => this.triggerNextQuestion() }\n        data-testid=\"btn-next\"\n        style={\n          disable ? { display: 'none' } : { display: 'flex' }\n        }\n      >\n        Pr√≥ximo\n      </button>\n    );\n  }\n}\n\nNextBtn.propTypes = {\n  game: PropTypes.arrayOf(PropTypes.object).isRequired,\n  questionNumber: PropTypes.number.isRequired,\n  disable: PropTypes.bool.isRequired,\n  pushBtn: PropTypes.func.isRequired,\n  setAnswers: PropTypes.func.isRequired,\n  toggleTimerDispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  game: state.game.game,\n  questionNumber: state.game.questionNumber,\n  disable: state.game.disable,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  pushBtn: () => (dispatch(pressNextBtn())),\n  toggleTimerDispatch: () => dispatch(toggleTimer()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextBtn);\n"]},"metadata":{},"sourceType":"module"}