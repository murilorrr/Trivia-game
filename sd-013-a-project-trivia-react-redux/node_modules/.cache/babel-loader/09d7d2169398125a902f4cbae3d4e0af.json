{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/NextBtn.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { pressNextBtn } from '../redux/actions/pressBtn';\n\nclass NextBtn extends React.Component {\n  constructor() {\n    super();\n    this.triggerNextQuestion = this.triggerNextQuestion.bind(this);\n  }\n\n  triggerNextQuestion() {\n    const _this$props = this.props,\n          pushBtn = _this$props.pushBtn,\n          games = _this$props.games,\n          numberOfQuestion = _this$props.numberOfQuestion;\n    const numeroDePerguntas = Object.keys(games).length;\n    const feedbackString = 'Redireciona para tela de feedback';\n    const ternário = numberOfQuestion !== numeroDePerguntas - 1 ? pushBtn() : console.log(feedbackString);\n    return ternário;\n  }\n\n  render() {\n    const disable = this.props.disable;\n    return React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.triggerNextQuestion,\n      \"data-testid\": \"btn-next\",\n      disabled: disable,\n      style: {\n        display: {\n          none\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Pr\\xF3ximo\");\n  }\n\n}\n\nNextBtn.propTypes = {\n  pushBtn: PropTypes.func.isRequired,\n  disable: PropTypes.bool.isRequired,\n  games: PropTypes.arrayOf(PropTypes.object).isRequired,\n  numberOfQuestion: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  disable: state.game.disable,\n  games: state.game.games,\n  numberOfQuestion: state.game.question\n});\n\nconst mapDispatchToProps = dispatch => ({\n  pushBtn: () => dispatch(pressNextBtn())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextBtn);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/components/NextBtn.jsx"],"names":["React","connect","PropTypes","pressNextBtn","NextBtn","Component","constructor","triggerNextQuestion","bind","props","pushBtn","games","numberOfQuestion","numeroDePerguntas","Object","keys","length","feedbackString","ternário","console","log","render","disable","display","none","propTypes","func","isRequired","bool","arrayOf","object","number","mapStateToProps","state","game","question","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDD,EAAAA,mBAAmB,GAAG;AAAA,wBACyB,KAAKE,KAD9B;AAAA,UACZC,OADY,eACZA,OADY;AAAA,UACHC,KADG,eACHA,KADG;AAAA,UACIC,gBADJ,eACIA,gBADJ;AAEpB,UAAMC,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAA7C;AACA,UAAMC,cAAc,GAAG,mCAAvB;AACA,UAAMC,QAAQ,GAAGN,gBAAgB,KAAKC,iBAAiB,GAAG,CAAzC,GAA6CH,OAAO,EAApD,GACbS,OAAO,CAACC,GAAR,CAAYH,cAAZ,CADJ;AAEA,WAAOC,QAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKb,KADlB,CACCa,OADD;AAEP,WACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,KAAKf,mBAFjB;AAGE,qBAAY,UAHd;AAIE,MAAA,QAAQ,EAAGe,OAJb;AAKE,MAAA,KAAK,EAAG;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA;AAAF;AAAX,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAWD;;AA5BmC;;AA+BtCpB,OAAO,CAACqB,SAAR,GAAoB;AAClBf,EAAAA,OAAO,EAAER,SAAS,CAACwB,IAAV,CAAeC,UADN;AAElBL,EAAAA,OAAO,EAAEpB,SAAS,CAAC0B,IAAV,CAAeD,UAFN;AAGlBhB,EAAAA,KAAK,EAAET,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAAC4B,MAA5B,EAAoCH,UAHzB;AAIlBf,EAAAA,gBAAgB,EAAEV,SAAS,CAAC6B,MAAV,CAAiBJ;AAJjB,CAApB;;AAOA,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,OAAO,EAAEW,KAAK,CAACC,IAAN,CAAWZ,OADc;AAElCX,EAAAA,KAAK,EAAEsB,KAAK,CAACC,IAAN,CAAWvB,KAFgB;AAGlCC,EAAAA,gBAAgB,EAAEqB,KAAK,CAACC,IAAN,CAAWC;AAHK,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC3B,EAAAA,OAAO,EAAE,MAAO2B,QAAQ,CAAClC,YAAY,EAAb;AADgB,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAAC+B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ChC,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { pressNextBtn } from '../redux/actions/pressBtn';\n\nclass NextBtn extends React.Component {\n  constructor() {\n    super();\n    this.triggerNextQuestion = this.triggerNextQuestion.bind(this);\n  }\n\n  triggerNextQuestion() {\n    const { pushBtn, games, numberOfQuestion } = this.props;\n    const numeroDePerguntas = Object.keys(games).length;\n    const feedbackString = 'Redireciona para tela de feedback';\n    const ternário = numberOfQuestion !== numeroDePerguntas - 1 ? pushBtn()\n      : console.log(feedbackString);\n    return ternário;\n  }\n\n  render() {\n    const { disable } = this.props;\n    return (\n      <button\n        type=\"button\"\n        onClick={ this.triggerNextQuestion }\n        data-testid=\"btn-next\"\n        disabled={ disable }\n        style={ { display: { none } } }\n      >\n        Próximo\n      </button>\n    );\n  }\n}\n\nNextBtn.propTypes = {\n  pushBtn: PropTypes.func.isRequired,\n  disable: PropTypes.bool.isRequired,\n  games: PropTypes.arrayOf(PropTypes.object).isRequired,\n  numberOfQuestion: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  disable: state.game.disable,\n  games: state.game.games,\n  numberOfQuestion: state.game.question,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  pushBtn: () => (dispatch(pressNextBtn())),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextBtn);\n"]},"metadata":{},"sourceType":"module"}