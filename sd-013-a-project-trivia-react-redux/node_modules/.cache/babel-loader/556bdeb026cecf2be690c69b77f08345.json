{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Ranking.jsx\";\nimport React, { Component } from 'react'; // import PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: []\n    };\n  }\n\n  componentDidMount() {\n    this.renderPlayerList();\n  }\n\n  renderPlayerList() {\n    const _JSON$parse$player = JSON.parse(localStorage.state).player,\n          name = _JSON$parse$player.name,\n          score = _JSON$parse$player.score,\n          assertions = _JSON$parse$player.assertions,\n          gravatar = _JSON$parse$player.gravatar;\n    const newEntry = {\n      name,\n      score,\n      assertions,\n      gravatar\n    };\n\n    if (localStorage.ranking) {\n      const ranking = JSON.parse(localStorage.ranking);\n      const newRanking = [...ranking, newEntry];\n      newRanking.sort((a, b) => b.score - a.score);\n      localStorage.ranking = JSON.stringify(newRanking);\n      this.setState({\n        players: newRanking\n      });\n    } else {\n      const newRanking = [newEntry];\n      localStorage.ranking = JSON.stringify(newRanking);\n      this.setState({\n        players: newRanking\n      });\n    }\n  }\n\n  render() {\n    const players = this.state.players;\n    return React.createElement(\"div\", {\n      \"data-testid\": \"ranking-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, players.map((player, index) => React.createElement(\"div\", {\n      key: player,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: player.gravatar,\n      alt: `Foto de pessoa ${player.name}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      \"data-testid\": `player-name-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, player.name), React.createElement(\"span\", {\n      \"data-testid\": `player-score-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, player.score), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Acertos:\", player.assertions))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-go-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Recome\\xE7ar jogo\"))));\n  }\n\n} // const mapStateToProps = (state) => ({\n// });\n// const mapDispatchToProps = (dispatch) => ({\n// });\n\n\nexport default connect(null, null)(Ranking); // Ranking.propTypes = {\n// };","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Ranking.jsx"],"names":["React","Component","connect","Link","Ranking","constructor","props","state","players","componentDidMount","renderPlayerList","JSON","parse","localStorage","player","name","score","assertions","gravatar","newEntry","ranking","newRanking","sort","a","b","stringify","setState","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Ranking extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      players: [],\n    };\n  }\n\n  componentDidMount() {\n    this.renderPlayerList();\n  }\n\n  renderPlayerList() {\n    const { name, score, assertions, gravatar } = JSON.parse(localStorage.state).player;\n    const newEntry = { name, score, assertions, gravatar };\n\n    if (localStorage.ranking) {\n      const ranking = JSON.parse(localStorage.ranking);\n      const newRanking = [...ranking, newEntry];\n      newRanking.sort((a, b) => b.score - a.score);\n      localStorage.ranking = JSON.stringify(newRanking);\n      this.setState({ players: newRanking });\n    } else {\n      const newRanking = [newEntry];\n      localStorage.ranking = JSON.stringify(newRanking);\n      this.setState({ players: newRanking });\n    }\n  }\n\n  render() {\n    const { players } = this.state;\n    return (\n\n      <div data-testid=\"ranking-title\">\n        {players.map((player, index) => (\n          <div key={ player }>\n            <img src={ player.gravatar } alt={ `Foto de pessoa ${player.name}` } />\n            <span data-testid={ `player-name-${index}` }>\n              {player.name}\n            </span>\n            <span data-testid={ `player-score-${index}` }>\n              {player.score}\n            </span>\n            <span>\n              Acertos:\n              {player.assertions}\n            </span>\n          </div>))}\n        <p>\n          <Link to=\"/\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-go-home\"\n            >\n              Recome√ßar jogo\n            </button>\n          </Link>\n        </p>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => ({\n\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n\n// });\n\nexport default connect(null, null)(Ranking);\n\n// Ranking.propTypes = {\n\n// };\n"]},"metadata":{},"sourceType":"module"}