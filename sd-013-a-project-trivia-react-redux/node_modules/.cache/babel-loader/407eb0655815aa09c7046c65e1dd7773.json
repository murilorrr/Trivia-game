{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.jsx\";\n// React\nimport React from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux';\nimport { setCategory, setDifficult, setAllCategory, setNumberOfQuestions } from '../redux/actions/settings'; // Services\n\nimport { fetchCategories } from '../services/apiTrivia'; // Children\n\nimport { GoHome } from '../components'; // Styles\n\nimport '../styles/Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    const _this$props = this.props,\n          value = _this$props.value,\n          category = _this$props.category,\n          difficult = _this$props.difficult,\n          allcategories = _this$props.allcategories;\n    this.state = {\n      allcategories,\n      value,\n      category,\n      difficult\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n    this.renderValues = this.renderValues.bind(this);\n    this.renderDifficulty = this.renderDifficulty.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const _this$props2 = this.props,\n          allcategories = _this$props2.allcategories,\n          configGameAllCategoriesDispatch = _this$props2.configGameAllCategoriesDispatch;\n\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      configGameAllCategoriesDispatch(response);\n      this.setState({\n        allcategories: response\n      });\n    } else {\n      const _this$props3 = this.props,\n            value = _this$props3.value,\n            category = _this$props3.category,\n            difficult = _this$props3.difficult;\n      this.setState({\n        allcategories,\n        value,\n        category,\n        difficult\n      });\n    }\n  }\n\n  save() {\n    const _this$props4 = this.props,\n          configGameCategoryDispatch = _this$props4.configGameCategoryDispatch,\n          configGameNumberDispatch = _this$props4.configGameNumberDispatch,\n          configGameDifficultDispatch = _this$props4.configGameDifficultDispatch,\n          history = _this$props4.history;\n    const _this$state = this.state,\n          category = _this$state.category,\n          value = _this$state.value,\n          difficult = _this$state.difficult;\n    configGameCategoryDispatch(category);\n    configGameDifficultDispatch(difficult);\n    configGameNumberDispatch(value);\n    history.push('/');\n  }\n\n  mapAllCategories(param) {\n    return param.map(({\n      id,\n      name\n    }) => React.createElement(\"option\", {\n      key: id,\n      value: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, name));\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  renderDifficulty() {\n    const difficult = this.state.difficult;\n    return React.createElement(\"label\", {\n      className: \"SelectDifficulty\",\n      htmlFor: \"difficult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Select Difficulty:\", React.createElement(\"select\", {\n      select: difficult,\n      id: \"difficult\",\n      className: \"form-select\",\n      name: \"difficult\",\n      value: difficult,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Any Difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Any Difficulty\"), React.createElement(\"option\", {\n      value: \"easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(\"option\", {\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Hard\")));\n  }\n\n  renderValues() {\n    const value = this.state.value;\n    return React.createElement(\"label\", {\n      className: \"SelectQuantity\",\n      htmlFor: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Number of Questions:\", React.createElement(\"select\", {\n      id: \"value\",\n      className: \"form-select\",\n      name: \"value\",\n      value: value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      value: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"15\"), React.createElement(\"option\", {\n      value: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"20\")));\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          allcategories = _this$state2.allcategories,\n          category = _this$state2.category;\n    return React.createElement(\"section\", {\n      className: \"Settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Settings-Wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"settings-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), React.createElement(\"div\", {\n      className: \"Settings-Fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.renderValues(), React.createElement(\"label\", {\n      className: \"SelectCategory\",\n      htmlFor: \"categorias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Select Category:\", React.createElement(\"select\", {\n      id: \"categorias\",\n      className: \"form-select\",\n      name: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.mapAllCategories(allcategories))), this.renderDifficulty()), React.createElement(\"div\", {\n      className: \"Settings-Btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(GoHome, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Salvar\"))));\n  }\n\n}\n\nSettings.propTypes = {\n  allcategories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  category: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  difficult: PropTypes.string.isRequired,\n  configGameAllCategoriesDispatch: PropTypes.func.isRequired,\n  configGameCategoryDispatch: PropTypes.func.isRequired,\n  configGameNumberDispatch: PropTypes.func.isRequired,\n  configGameDifficultDispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  value: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allCategories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  configGameCategoryDispatch: payload => dispatch(setCategory(payload)),\n  configGameNumberDispatch: payload => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: payload => dispatch(setDifficult(payload)),\n  configGameAllCategoriesDispatch: payload => dispatch(setAllCategory(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Settings.jsx"],"names":["React","PropTypes","connect","setCategory","setDifficult","setAllCategory","setNumberOfQuestions","fetchCategories","GoHome","Settings","Component","constructor","props","value","category","difficult","allcategories","state","handleChange","bind","mapAllCategories","setAllcategories","renderValues","renderDifficulty","save","componentDidMount","configGameAllCategoriesDispatch","length","response","setState","configGameCategoryDispatch","configGameNumberDispatch","configGameDifficultDispatch","history","push","param","map","id","name","target","render","propTypes","arrayOf","object","isRequired","string","func","shape","mapStateToProps","settings","numberOfQuestions","allCategories","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["// React\nimport React from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Redux\nimport { connect } from 'react-redux';\nimport {\n  setCategory,\n  setDifficult,\n  setAllCategory,\n  setNumberOfQuestions,\n} from '../redux/actions/settings';\n\n// Services\nimport { fetchCategories } from '../services/apiTrivia';\n\n// Children\nimport { GoHome } from '../components';\n\n// Styles\nimport '../styles/Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value, category, difficult, allcategories } = this.props;\n    this.state = {\n      allcategories,\n      value,\n      category,\n      difficult,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.mapAllCategories = this.mapAllCategories.bind(this);\n    this.setAllcategories = this.setAllcategories.bind(this);\n    this.renderValues = this.renderValues.bind(this);\n    this.renderDifficulty = this.renderDifficulty.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    this.setAllcategories();\n  }\n\n  async setAllcategories() {\n    const { allcategories, configGameAllCategoriesDispatch } = this.props;\n    if (allcategories.length === 0) {\n      const response = await fetchCategories();\n      configGameAllCategoriesDispatch(response);\n      this.setState({ allcategories: response });\n    } else {\n      const { value, category, difficult } = this.props;\n      this.setState({ allcategories, value, category, difficult });\n    }\n  }\n\n  save() {\n    const {\n      configGameCategoryDispatch,\n      configGameNumberDispatch,\n      configGameDifficultDispatch,\n      history,\n    } = this.props;\n    const { category, value, difficult } = this.state;\n    configGameCategoryDispatch(category);\n    configGameDifficultDispatch(difficult);\n    configGameNumberDispatch(value);\n    history.push('/');\n  }\n\n  mapAllCategories(param) {\n    return param.map(({ id, name }) => (\n      <option\n        key={ id }\n        value={ id }\n      >\n        {name}\n      </option>));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  renderDifficulty() {\n    const { difficult } = this.state;\n    return (\n      <label className=\"SelectDifficulty\" htmlFor=\"difficult\">\n        Select Difficulty:\n        <select\n          select={ difficult }\n          id=\"difficult\"\n          className=\"form-select\"\n          name=\"difficult\"\n          value={ difficult }\n          onChange={ this.handleChange }\n        >\n          <option value=\"Any Difficulty\">\n            Any Difficulty\n          </option>\n          <option value=\"easy\">Easy</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"hard\">Hard</option>\n        </select>\n      </label>\n    );\n  }\n\n  renderValues() {\n    const { value } = this.state;\n    return (\n      <label className=\"SelectQuantity\" htmlFor=\"value\">\n        Number of Questions:\n        <select\n          id=\"value\"\n          className=\"form-select\"\n          name=\"value\"\n          value={ value }\n          onChange={ this.handleChange }\n        >\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"15\">15</option>\n          <option value=\"20\">20</option>\n        </select>\n      </label>);\n  }\n\n  render() {\n    const { allcategories, category } = this.state;\n    return (\n      <section className=\"Settings\">\n        <div className=\"Settings-Wrapper\">\n          <h1 data-testid=\"settings-title\">Configurações</h1>\n          <div className=\"Settings-Fieldset\">\n            {this.renderValues()}\n            <label className=\"SelectCategory\" htmlFor=\"categorias\">\n              Select Category:\n              <select\n                id=\"categorias\"\n                className=\"form-select\"\n                name=\"category\"\n                value={ category }\n                onChange={ this.handleChange }\n              >\n                {this.mapAllCategories(allcategories)}\n              </select>\n            </label>\n            {this.renderDifficulty()}\n          </div>\n\n          <div className=\"Settings-Btns\">\n            <GoHome />\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={ this.save }\n            >\n              Salvar\n            </button>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nSettings.propTypes = {\n  allcategories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  category: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  difficult: PropTypes.string.isRequired,\n  configGameAllCategoriesDispatch: PropTypes.func.isRequired,\n  configGameCategoryDispatch: PropTypes.func.isRequired,\n  configGameNumberDispatch: PropTypes.func.isRequired,\n  configGameDifficultDispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.settings.numberOfQuestions,\n  category: state.settings.category,\n  difficult: state.settings.difficult,\n  allcategories: state.settings.allCategories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  configGameCategoryDispatch: (payload) => dispatch(setCategory(payload)),\n  configGameNumberDispatch: (payload) => dispatch(setNumberOfQuestions(payload)),\n  configGameDifficultDispatch: (payload) => dispatch(setDifficult(payload)),\n  configGameAllCategoriesDispatch: (payload) => dispatch(setAllCategory(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n"]},"metadata":{},"sourceType":"module"}