{"ast":null,"code":"var _jsxFileName = \"/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Gamepage.jsx\";\nimport React from 'react';\nimport apiTrivia from '../helpers/apiTrivia';\nimport HeaderGame from '../components/HeaderGame';\nimport Loading from '../components/Loading';\n\nclass Gamepage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      results: {}\n    };\n    this.answerRandom = this.answerRandom.bind(this);\n    this.inicialiGame = this.inicialiGame.bind(this);\n  }\n\n  componentDidMount() {\n    this.inicialiGame();\n  }\n\n  inicialiGame() {\n    const token = localStorage.getItem('token');\n    apiTrivia(token).then(results => this.setState({\n      results\n    }));\n  }\n\n  answerRandom() {\n    const results = this.state.results;\n    const answers = [results[0].correct_answer, ...results[0].incorrect_answers];\n    const answersRandom = answers.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(({\n      value\n    }) => value);\n    return answersRandom.map((answer, index) => React.createElement(\"button\", {\n      type: \"button\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, answer));\n  }\n\n  render() {\n    const results = this.state.results;\n    if (Object.keys(results).length === 0) return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n    const category = results[0].category;\n    const question = results[0].question;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(HeaderGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"Sou uma P\\xE1gina de game\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, question), this.answerRandom()));\n  }\n\n}\n\nexport default Gamepage;","map":{"version":3,"sources":["/home/murilorsv21/Projects/sd-013-a-project-trivia-react-redux/src/pages/Gamepage.jsx"],"names":["React","apiTrivia","HeaderGame","Loading","Gamepage","Component","constructor","state","results","answerRandom","bind","inicialiGame","componentDidMount","token","localStorage","getItem","then","setState","answers","correct_answer","incorrect_answers","answersRandom","map","value","sort","Math","random","a","b","answer","index","render","Object","keys","length","category","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAG;AACb,UAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAd,IAAAA,SAAS,CAACY,KAAD,CAAT,CAAiBG,IAAjB,CAAuBR,OAAD,IAAa,KAAKS,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd,CAAnC;AACD;;AAEDC,EAAAA,YAAY,GAAG;AAAA,UACLD,OADK,GACO,KAAKD,KADZ,CACLC,OADK;AAEb,UAAMU,OAAO,GAAG,CACdV,OAAO,CAAC,CAAD,CAAP,CAAWW,cADG,EAEd,GAAGX,OAAO,CAAC,CAAD,CAAP,CAAWY,iBAFA,CAAhB;AAIA,UAAMC,aAAa,GAAGH,OAAO,CAC1BI,GADmB,CACdC,KAAD,KAAY;AAAEA,MAAAA,KAAF;AAASC,MAAAA,IAAI,EAAEC,IAAI,CAACC,MAAL;AAAf,KAAZ,CADe,EAEnBF,IAFmB,CAEd,CAACG,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAFP,EAGnBF,GAHmB,CAGf,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAeA,KAHA,CAAtB;AAIA,WAAOF,aAAa,CACjBC,GADI,CACA,CAACO,MAAD,EAASC,KAAT,KAAmB;AAAS,MAAA,IAAI,EAAC,QAAd;AAAuB,MAAA,GAAG,EAAGA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCD,MAAtC,CADnB,CAAP;AAED;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCvB,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAEP,QAAIwB,MAAM,CAACC,IAAP,CAAYzB,OAAZ,EAAqB0B,MAArB,KAAgC,CAApC,EAAuC,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAFhC,UAGCC,QAHD,GAGc3B,OAAO,CAAC,CAAD,CAHrB,CAGC2B,QAHD;AAAA,UAICC,QAJD,GAIc5B,OAAO,CAAC,CAAD,CAJrB,CAIC4B,QAJD;AAKP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,+BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,qBAAY,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,QADJ,CADF,EAIE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,QADJ,CAJF,EAOG,KAAK3B,YAAL,EAPH,CAHF,CADF;AAeD;;AAtDoC;;AAyDvC,eAAeL,QAAf","sourcesContent":["import React from 'react';\nimport apiTrivia from '../helpers/apiTrivia';\nimport HeaderGame from '../components/HeaderGame';\nimport Loading from '../components/Loading';\n\nclass Gamepage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      results: {},\n    };\n    this.answerRandom = this.answerRandom.bind(this);\n    this.inicialiGame = this.inicialiGame.bind(this);\n  }\n\n  componentDidMount() {\n    this.inicialiGame();\n  }\n\n  inicialiGame() {\n    const token = localStorage.getItem('token');\n    apiTrivia(token).then((results) => this.setState({ results }));\n  }\n\n  answerRandom() {\n    const { results } = this.state;\n    const answers = [\n      results[0].correct_answer,\n      ...results[0].incorrect_answers,\n    ];\n    const answersRandom = answers\n      .map((value) => ({ value, sort: Math.random() }))\n      .sort((a, b) => a.sort - b.sort)\n      .map(({ value }) => value);\n    return answersRandom\n      .map((answer, index) => <button  type=\"button\" key={ index }>{answer}</button>);\n  }\n\n  render() {\n    const { results } = this.state;\n    if (Object.keys(results).length === 0) return <Loading />;\n    const { category } = results[0];\n    const { question } = results[0];\n    return (\n      <div>\n        <HeaderGame />\n        Sou uma PÃ¡gina de game\n        <div>\n          <h3 data-testid=\"question-category\">\n            { category }\n          </h3>\n          <p data-testid=\"question-text\">\n            { question }\n          </p>\n          {this.answerRandom()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gamepage;\n"]},"metadata":{},"sourceType":"module"}